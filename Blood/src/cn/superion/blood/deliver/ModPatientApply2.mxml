<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   layout="vertical"
		   width="100%"
		   height="100%"
		   paddingBottom="5"
		   paddingLeft="5"
		   paddingRight="5"
		   paddingTop="5"
		   horizontalGap="0"
		   verticalGap="0"
		   creationComplete="module1_creationCompleteHandler(event)"
		   xmlns:controls="cn.superion.base.components.controls.*" xmlns:spark="com.flexicious.grids.spark.*" xmlns:columns="com.flexicious.grids.spark.columns.*">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:RemoteObject id="ro" showBusyCursor="true" destination="patientApplyImpl" endpoint="spring/messagebroker/amf">
			<mx:method name="findListByCondition2" result="onResult(event)" />
		</mx:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
		import cn.superion.base.filter.MyFilter;
		import cn.superion.base.filter.MyFilterSort;
		import cn.superion.base.AppInfo;
		import cn.superion.base.config.BaseDict;
		import cn.superion.base.config.ParameterObject;
		import cn.superion.base.util.ArrayCollUtils;
		import cn.superion.base.util.FormUtils;
		import cn.superion.base.util.LoadModuleUtil;
		import cn.superion.base.util.PurviewUtil;
		import cn.superion.base.RemoteUtil;
		import cn.superion.blood.deliver.view.BloodPatientApplyAdd;
		import cn.superion.blood.deliver.view.BloodPatientApplyAdd2;
		import cn.superion.blood.util.DefaultPage;
		import cn.superion.dataDict.DictWinShower;
		import cn.superion.main.treeMenu.MainFrameUtil;
		import cn.superion.report2.ReportViewer;
		import cn.superion.vo.blood.BloodCheckMaster;
		import cn.superion.vo.blood.BloodInPatsVisit;
		import cn.superion.vo.blood.BloodRdsMaster;
		import cn.superion.vo.blood.VBloodRds;

		import com.adobe.utils.StringUtil;
		import com.flexicious.grids.events.FilterPageSortChangeEvent;
		import com.flexicious.grids.filters.FilterSort;

		import flexlib.controls.textClasses.Finder;
		import flexlib.scheduling.util.DateUtil;

		import mx.collections.ArrayCollection;
		import mx.collections.IViewCursor;
		import mx.controls.Alert;
		import mx.core.FlexGlobals;
		import mx.events.CloseEvent;
		import mx.events.FlexEvent;
		import mx.managers.PopUpManager;
		import mx.modules.ModuleLoader;
		import mx.rpc.events.ResultEvent;
		import mx.rpc.remoting.mxml.RemoteObject;
		import mx.utils.Base64Decoder;

		private const MENU_NO:String = "0201";

		[Bindable]
		private var destination:String = "patientApplyImpl";
		private var wardCode:String = '';
		private var laryWillPrintItems:ArrayCollection = null;
		private var _tempDeptCode:String = "";
		private var _tempWardCode:String = "";
		private var _keyDownComplete:Boolean = false;
		private var _tempList:ArrayCollection = null;
		public var cursor:IViewCursor = null;
		public var currentObj:Object = null;
		private var filterTriggerColumn:String = "";
		//窗口初始化
		protected function module1_creationCompleteHandler(event:FlexEvent):void {
			if (DefaultPage.isLinkApply == true) {
				btCheck_clickHandler(event);
			}
			else {
				var filter:MyFilter = new MyFilter(null);
				filter.pageIndex = 0;
				filter.pageSize = gridPatientApplyList.pageSize;
				var filtersort:FilterSort = new FilterSort();
				filtersort.sortColumn = "billDate";
				filtersort.isAscending = true;
				filter.sorts.addItem(new MyFilterSort(filtersort));
				ro.findListByCondition2(filter);
			}
		}

		/**
		 * 相应keyDown事件
		 * */
		public function keyDown_handler(event:KeyboardEvent):void {
			if (event.keyCode != 13)
				return;
			btCheck_clickHandler(event);
			this.removeEventListener(KeyboardEvent.KEY_DOWN, keyDown_handler);
		}

		/**
		 * 部门字典：点击
		 * */
		protected function deptCode_queryIconClickHandler():void {
//				var x:int=0;
//				var y:int=this.parentApplication.screen.height - 345;
//				DictWinShower.showDeptDict((function (item:Object):void{
//					deptCode.txtContent.text = item.deptName;
//					_tempDeptCode = item.deptCode;
//				}));
		}

		/**
		 * 部门字典：点击
		 * */
		protected function wardCode_queryIconClickHandler():void {
//				var x:int=0;
//				var y:int=this.parentApplication.screen.height - 345;
//				DictWinShower.showDeptWardDict((function (item:Object):void{
//					wardCode2.txtContent.text = item.deptName;
//					_tempWardCode = item.deptCode;
//				}));
		}

		//			/**
		//			 * 部门字典：弹出
		//			 * */
		//			protected function deptCode_keyDownHandler(event:KeyboardEvent):void
		//			{
		//				if(event.keyCode != 13)	return;
		//				if(deptCode.txtContent.text.length > 0 ){
		//					txtInpNo.setFocus();
		//					return
		//				}
		//				deptCode_queryIconClickHandler();
		//			}

		/**
		 * 提交日期，查询选中日期的记录
		 * */

		protected function dfStart_valueCommitHandler(event:FlexEvent):void {
//				btQuery_clickHandler();
		}

		//发放
		protected function btCheck_clickHandler(event:Event):void {
			if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, "06")) {
				Alert.show("您无此按钮操作权限！", "提示");
				return;
			}
			var testWin:BloodPatientApplyAdd2 = PopUpManager.createPopUp(this, BloodPatientApplyAdd2, true) as BloodPatientApplyAdd2;
			testWin.data = {parentWin: this};
			testWin._parentWin = this;
			testWin._selectedIndex = gridPatientApplyList.selectedIndex;
			FormUtils.fullScreenWindow(testWin);

		}

		private function btExport():void {
			DefaultPage.exportExcel(gridPatientApplyList, "病人血液发放记录");
		}

		//返回主页面
		protected function btReturn_clickHandler(event:MouseEvent):void {
			MainFrameUtil.closeTab(this);
		}

		public static function addOneDay(date:Date):Date {
			//
			return flexlib.scheduling.util.DateUtil.addTime(new Date(date), flexlib.scheduling.util.DateUtil.DAY_IN_MILLISECONDS - 1000);
		}


		private function queryCallBack(rev:Object):void {
			if (!rev || !rev.data || rev.data.length == 0) {
				gridPatientApplyList.grid.dataProvider = new ArrayCollection();
				return;
			}
//				var ary:ArrayCollection = new ArrayCollection();
//				for each (var item:Object in rev.data){
//					var o :Object = new Object();
//					o.patientId = item[0].patientId;
//					o.personName = item[0].personName;
//					o.bedNo = item[2].bedNo;
//					o.sex=item[0].sex;
//					o.sexName = item[0].sex =="1"?"男": item[0].sex=="2"?"女": item[0].sex;
//					o.bloodName=item[0].bloodName;
//					o.billDate = item[1].billDate;
//					//
//					o.remark = item[1].remark;
//					o.patientType = item[1].patientType;
//					o.sampleNo = item[1].sampleNo;
//					o.chargeTypeName = item[1].chargeType;
//					o.wardCode=item[1].deptCode; //病人所在病区
//					o.visitDept = item[1].visitDept; //开单科室
//					o.visitDoctor=item[1].visitDoctor;
//					o.sendVerifier = item[1].sendVerifier;
//					o.rdsMasterAutoId = item[1].autoId;
//					o.billNo2 = item[1].billNo2;
//					o.verifier = item[1].verifier;
//					o.currentStatus = item[1].currentStatus == "2"? "已退":item[1].currentStatus == "1"?"发放":"新建";;
//					ary.addItem(o);
//				}
			gridPatientApplyList.grid.dataProvider = rev.data;
			_tempList = rev.data;
			cursor = _tempList.createCursor();

		}

		//查看
		protected function btDetail_clickHandler(lstrPurview:String, isPrintSign:String):void {
			//判断具有操作权限  -- 应用程序编号，菜单编号，权限编号
			// 01：增加                02：修改            03：删除
			// 04：保存                05：打印            06：审核
			// 07：弃审                08：输出            09：输入
			if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, "02")) {
				Alert.show("您无此按钮操作权限！", "提示");
				return;
			}
			var sel:Object = gridPatientApplyList.selectedItem;
			if (!sel) {
				Alert.show("请选择一条记录！", "提示");
				return;
			}
			var testWin:BloodPatientApplyAdd2 = PopUpManager.createPopUp(this, BloodPatientApplyAdd2, true) as BloodPatientApplyAdd2;
			testWin.data = {masterItem: sel, parentWin: this};
			testWin._parentWin = this;
			testWin._selectedIndex = gridPatientApplyList.selectedIndex;
			FormUtils.fullScreenWindow(testWin);
		}

		//病区字典
		protected function deptWard_clickHandler(event:Event):void {
//				DictWinShower.showDeptWardDict(showItem);
		}

		//回调函数
		private function showItem(rev:Object):void {
//				txtWardCode.txtContent.text=rev.deptName;
//				wardCode=rev.deptCode;
		}

		//回车事件
		protected function keyUpCtrl(event:KeyboardEvent, ctrl:Object):void {
			if (event.keyCode == 13) {
				ctrl.setFocus();
			}
		}

		//双击打开发放界面
		protected function gridPatientApplyList_doubleClickHandler(event:MouseEvent):void {
			//判断具有操作权限  -- 应用程序编号，菜单编号，权限编号
			// 01：增加                02：修改            03：删除
			// 04：保存                05：打印            06：审核
			// 07：弃审                08：输出            09：输入
			if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, "06")) {
				Alert.show("您无发放的操作权限！", "提示");
				return;
			}
			if (!gridPatientApplyList.selectedItem) {
				return;
			}
			var testWin:BloodPatientApplyAdd2 = PopUpManager.createPopUp(this, BloodPatientApplyAdd2, true) as BloodPatientApplyAdd2;
			testWin.data = {masterItem: gridPatientApplyList.selectedItem, parentWin: this};
			testWin._parentWin = this;
			testWin._selectedIndex = gridPatientApplyList.selectedIndex;
			FormUtils.fullScreenWindow(testWin);
		}

		private function labelFun(item:*, col:Object):* {
			var itemObject:*;
			if (col.dataField == 'rhSign') {
				if (item.rhSign == '1') {
					return '阴性';
				}

				return '阳性';
			}
			if (col.dataField == 'currentStatus') {
				if (item.currentStatus == '0') {
					return '新建';
				}

				return '审核';
			}
			if (col.headerText == '血型') {
				itemObject = ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodDict, 'blood', item.bloodCode);
				if (itemObject == null) {
					return '';
				}
				return itemObject.bloodName;
			}

			if (col.dataField == 'sex') {
				var sexItem:Object = ArrayCollUtils.findItemInArrayByValue(BaseDict.sexDict, 'sex', item.sex);
				return sexItem ? sexItem.sexName : "";
			}

			//人员
			if (col.dataField == 'visitDoctor') {
				itemObject = ArrayCollUtils.findItemInArrayByValue(BaseDict.personIdDict, 'personId', item.visitDoctor);
				if (itemObject == null) {
					return '';
				}
				item.visitDoctorName = itemObject.personIdName;
				return itemObject.personIdName;
			}
			//科室
			if (col.dataField == 'visitDept') {
				itemObject = ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict, 'dept', item.visitDept);
				if (itemObject == null) {
					return '';
				}
				item.visitDeptName = itemObject.deptName;
				return itemObject.deptName;
			}
			//病区
			if (col.dataField == 'deptCode') {
				itemObject = ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict, 'dept', item.deptCode);
				if (itemObject == null) {
					return '';
				}
				item.wardCodeName = itemObject.deptName;
				return itemObject.deptName;
			}
		}


		protected function btCheck_keyDownHandler(event:KeyboardEvent):void {
			// TODO Auto-generated method stub
		}

		private function onFilterPageSortChange(event:FilterPageSortChangeEvent):void {
			ro.findListByCondition2(new MyFilter(event.filter));

			if (event.cause == "filterChange") {
				if (event.triggerEvent && event.triggerEvent.currentTarget) {
					filterTriggerColumn = event.triggerEvent.currentTarget.searchField;
				}
			}
		}

		private function onResult(event:ResultEvent):void {
			gridPatientApplyList.totalRecords = event.result.totalRecords;
			gridPatientApplyList.dataProvider = event.result.records as ArrayCollection;
			if (filterTriggerColumn) {
				gridPatientApplyList.validateNow();
				gridPatientApplyList.setFilterFocus(filterTriggerColumn);
				filterTriggerColumn = "";
			}
		}

		protected function prtLabel_clickHandler(event:MouseEvent):void {
			var _dataProvider:ArrayCollection = gridPatientApplyList.dataProvider as ArrayCollection;
			if (_dataProvider.length == 0) {
				Alert.show("请点击一条记录！", "提示");
				return;
			}
			var selectedItems:Vector.<Object> = gridPatientApplyList.selectedItems;
			var lstIds:ArrayCollection = new ArrayCollection();
			for each(var item:BloodRdsMaster in selectedItems) {
				lstIds.addItem(item.autoId);
			}
			var ro:RemoteObject = RemoteUtil.getRemoteObject(destination, function (rev:Object):void {
				if (rev.data.length > 0) {
					var result:ArrayCollection = rev.data as ArrayCollection;
					var maps:Array = [];
					for each(var it:VBloodRds in result) {
						var map:Object = {};
						map.printFlag = "1";
						map.createPerson = AppInfo.sysUser.userName;
						map.deptName = AppInfo.sysUser.deptName;
						//病人信息
						map.wardName = it.wardName;
						map.bedNo = it.bedNo;
						map.patientId = it.patientId;//
						map.patientName = it.patientName///personName.text;
						map.bloodType = it.bloodCode;
						//				map.bloodComponent = typeCode.selectedItem.bloodTypeName;//成分
						map.billDate = it.billDate;
						maps.push(map);
					}
				}

				if (ExternalInterface.available) {
					ExternalInterface.call("PrintLabelsInit", maps);
				}

			});
			ro.findPrintData(lstIds);


		}
		]]>
	</fx:Script>

	<s:BorderContainer width="100%"
					   height="100%"
					   borderVisible="false">
		<s:VGroup x="0"
				  y="0"
				  width="100%"
				  height="100%">

			<!-- 表体部分 -->
			<s:BorderContainer width="100%"
							   height="100%"
							   borderStyle="solid"
							   borderColor="#9ABBE6">
				<s:VGroup width="100%"
						  height="100%">
					<spark:ExtendedSparkDataGrid showSpinnerOnFilterPageSort="true" enableFilters="true" enableCopy="true" enableFooters="false"
												 enablePreferencePersistence="true" preferencePersistenceKey="sparkserverGridDotNet"
												 enablePaging="true" id="gridPatientApplyList" height="560" pagerPosition="bottomMiddle" 
												 pageSize="20" filterPageSortMode="server" useCompactPreferences="true"
												 pagerRenderer="cn.superion.base.CustomPagerControl"
												 filterPageSortChange="onFilterPageSortChange(event)" width="100%" 
												 filterRowHeight="30"  
												 >
						<spark:columns>
							<mx:ArrayList>
								<columns:ExtendedGridColumn headerText="标识号"
															 dataField="patientId"
															 width="80" />
								<columns:ExtendedGridColumn headerText="样本号"
															 dataField="sampleNo"
															 width="35"/>
								<columns:ExtendedGridColumn headerText="姓名"
															 dataField="personName"
															 width="80"/>
								<columns:ExtendedGridColumn headerText="性别"
												   dataField="sex"
												   labelFunction="labelFun"
												   width="35"/>
								<columns:ExtendedGridColumn headerText="血型"
												   labelFunction="labelFun"
												   width="40"/>
								<columns:ExtendedGridColumn headerText="Rh(D)"
												   dataField="rhSign"
												   width="50"
												   labelFunction="labelFun"/>
								<columns:ExtendedGridColumn headerText="血液成份"
												   width="160"
												   dataField="bloodTypeName"/>
								<columns:ExtendedGridColumn headerText="病区"
												   dataField="deptCode"
												   labelFunction="labelFun"
												   width="140"/>
								<columns:ExtendedGridColumn headerText="科室"
												   dataField="visitDept"
												   labelFunction="labelFun"
												   width="120"/>
								<columns:ExtendedGridColumn headerText="发放日期"
												   dataField="billDate"
												   formatterDateFormatString="yyyy.MM.dd HH:mm:ss" format="date"
												   width="80"/>
								<columns:ExtendedGridColumn headerText="送检医生"
												   dataField="visitDoctor"
												   labelFunction="labelFun"
												   width="80"/>
								<columns:ExtendedGridColumn headerText="诊断"
												   dataField="clinicDiagName"
												   width="140"/>
								<columns:ExtendedGridColumn headerText="当前状态"
												   dataField="currentStatus"
												   labelFunction="labelFun"
												   width="30"/>
							</mx:ArrayList>
							
						</spark:columns>
					</spark:ExtendedSparkDataGrid>
					<!-- 操作按钮部分 -->
					<s:HGroup height="31"
							  paddingBottom="10"
							  horizontalAlign="right"
							  gap="5"
							  width="100%">
						<mx:LinkButton id="prtLabel" 
									   icon="@Embed(source='/assets/images/button/print20.png')"
									   label="打印标签" click="prtLabel_clickHandler(event)"/>
						<mx:LinkButton id="btCheck"
									   label=" 发 放"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/save20.png')"
									   click="btCheck_clickHandler(event)"/>
						<mx:LinkButton id="btDetail"
									   label=" 查 看"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/print20.png')"
									   click="btDetail_clickHandler('05','1')"/>
						<mx:LinkButton id="btExp"
									   label="导出"
									   fontSize="12"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   click="btExport()"/>
						<mx:LinkButton id="btReturn"
									   label=" 返 回"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/return20.png')"
									   click="btReturn_clickHandler(event)"/>
						<mx:Spacer width="5"/>
					</s:HGroup>
				</s:VGroup>

			</s:BorderContainer>

		</s:VGroup>

	</s:BorderContainer>

</mx:Module>
