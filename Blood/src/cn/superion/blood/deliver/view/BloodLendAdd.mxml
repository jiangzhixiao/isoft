<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   close="titlewindow1_closeHandler(event)"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   backgroundColor="0xE2E8E8"
			   width="1000"
			   height="494"
			   title="血液直接出库"
			   xmlns:controls="cn.superion.base.components.controls.*"
			   creationComplete="inita(event)">
	<s:layout>
		<s:VerticalLayout paddingLeft="5"
						  paddingRight="5"/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import cn.superion.base.AppInfo;
			import cn.superion.base.config.BaseDict;
			import cn.superion.base.util.ArrayCollUtils;
			import cn.superion.base.util.FormUtils;
			import cn.superion.base.util.PurviewUtil;
			import cn.superion.base.RemoteUtil;
			import cn.superion.blood.deliver.ModBloodLend;
			import cn.superion.main.treeMenu.MainFrameUtil;
			import cn.superion.dataDict.DictWinShower;
			import cn.superion.report2.ReportViewer;
			import cn.superion.vo.blood.BloodDirectDeliver;
			import cn.superion.vo.blood.BloodRdsDetail;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.utils.StringUtil;
			
			public var data:Object=null;
			private const MENU_NO:String="0202";
			public var _parentWin:ModBloodLend;
			[Bindable]
			private var destination:String="bloodLendImpl";
			public var isOpenType:String='1';
			
			private var master:BloodDirectDeliver=new BloodDirectDeliver();
			private var ro:RemoteObject;
			private var arr:ArrayCollection=null;
			
			//窗口关闭
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				_parentWin.btQuery_clickHandler();
				PopUpManager.removePopUp(this)
			}
			//窗口初始化
			protected function inita(event:FlexEvent):void
			{
				var fItem:Object;
				wardCode.txtContent.editable=false;
				deptCode.txtContent.editable=false;
				doctor.txtContent.editable=false;
				if(isOpenType=='1')
				{
					this.title='新建';
					rhSign.selectedIndex=0;
					sex.selectedIndex=0;
					bloodCode.selectedIndex=0;
				}
			   if(isOpenType=='2')
				{
					this.title='修改';
					if (!data.masterItem)
						return;
					//将主页面所传记录信息，填充页面
					FormUtils.fillFormByItem(this, data.masterItem);
					master=data.masterItem;
					if(master.patientType)
					{
						if(master.patientType=='1')
						{
							lookType.selectedValue=='1'
						}else
						{
							lookType.selectedValue=='2'
						}
					}
					inpNo.editable=false;
					inpNo.enabled=false;
					FormUtils.selectComboItem(chargeType,'chargeType',data.masterItem.chargeType);
					FormUtils.selectComboItem(sex,'sex',data.masterItem.sex);
					FormUtils.selectComboItem(bloodCode,'bloodCode',data.masterItem.bloodCode);
					fItem = ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict,'dept',data.masterItem.wardCode);
					wardCode.txtContent.text=fItem?fItem.deptName:'';
					fItem = ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict,'dept',data.masterItem.deptCode);
					deptCode.txtContent.text=fItem?fItem.deptName:'';
	                fItem = ArrayCollUtils.findItemInArrayByValue(BaseDict.personIdDict,'personId',data.masterItem.applyDoctor);
					doctor.txtContent.text=fItem?fItem.personIdName:'';					
					
					if (data.masterItem.rhSign == '1')
					{
						rhSign.selectedIndex=1;
					}
					else
					{
						rhSign.selectedIndex=0;
					}
					//根据主记录中的autoId查找明细记录
					ro=RemoteUtil.getRemoteObject(destination,function(rev:Object):void
					{
						gridBloodLendList.dataProvider=rev.data;
						arr=gridBloodLendList.dataProvider as ArrayCollection;
					});
					ro.findDetailByMainAutoId(data.masterItem.autoId);
					//如果该记录处于发放或者已退状态，只可查看和打印，禁止其他操作
					if(data.masterItem.currentStatus=='发放'||data.masterItem.currentStatus=='已退')
					{
						btNew.enabled=false;
						btDelete.enabled=false;
						btSave.enabled=false;
						inpNo.enabled=false;
						bedNo.enabled=false;
						personName.enabled=false;
						sex.enabled=false;
						age.enabled=false;
						bloodCode.enabled=false;
						rhSign.enabled=false;
						chargeType.enabled=false;
						wardCode.enabled=false;
						deptCode.enabled=false;
						doctor.enabled=false;
						txtProductCode.enabled=false;
					}
				}
			}
			
			//审核
			protected function btCheck_clickHandler(event:MouseEvent):void
			{
				ro=RemoteUtil.getRemoteObject(destination, function(rev:Object):void
				{
					Alert.show("审核成功！", "提示");
					btCheck.enabled=false;	
					btDelete.enabled=false;
				});
				ro.verify(data.masterItem, arr);
			}
			//返回
			protected function btReturn_clickHandler(event:MouseEvent):void
			{
				_parentWin.btQuery_clickHandler();
				PopUpManager.removePopUp(this);
			}
			
			//保存时，非空验证
			private function saveValidate():Boolean
			{
				if(StringUtil.trim(patientId.text)=="")
				{
					patientId.setFocus();
					Alert.show("标识号不能为空！","提示信息");
					return false;
				}
//				if(StringUtil.trim(inpNo.text)=="")
//				{
//					inpNo.setFocus();
//					Alert.show("住院号不能为空！","提示信息");
//					return false;
//				}
//				if(StringUtil.trim(bedNo.text)=="")
//				{
//					bedNo.setFocus();
//					Alert.show("床号不能为空！","提示信息");
//					return false;
//				}
				if(StringUtil.trim(personName.text)=="")
				{
					personName.setFocus();
					Alert.show("姓名不能为空！","提示信息");
					return false;
				}
//				if(sex.selectedIndex==-1)
//				{
//					sex.setFocus();
//					Alert.show("请选择性别！","提示信息");
//					return false;
//				}
//				if(StringUtil.trim(age.text)=="")
//				{
//					age.setFocus();
//					Alert.show("年龄不能为空！","提示信息");
//					return false;
//				}
//				if(bloodCode.selectedIndex==-1)
//				{
//					bloodCode.setFocus();
//					Alert.show("请选择血型！","提示信息");
//					return false;
//				}
//				if(chargeType.selectedIndex==-1)
//				{
//					chargeType.setFocus();
//					Alert.show("请选择费别！","提示信息");
//					return false;
//				}
				if(wardCode.txtContent.text=="")
				{
					wardCode.txtContent.setFocus();
					Alert.show("请选择病区！","提示信息");
					return false;
				}
				if(deptCode.txtContent.text=="")
				{
					deptCode.txtContent.setFocus();
					Alert.show("请选择科室！","提示信息");
					return false;
				}
//				if(doctor.txtContent.text=="")
//				{
//					doctor.setFocus();
//					Alert.show("请选择医生！","提示信息");
//					return false;
//				}
				if( arr==null||arr.length < 1)
				{
					txtProductCode.setFocus();
					Alert.show("请输入血袋编号按回车键加载表格记录！","提示信息");
					return false;
				}
				return true;
			}
			
			//修改事件
			protected function btChange_clickHandler(event:MouseEvent):void
			{
				ro=RemoteUtil.getRemoteObject(destination, function(rev:Object):void
				{
					Alert.show('信息保存成功', '提示');
				});
				ro.save(data.masterItem, gridBloodLendList.dataProvider)
			}
			//新建
			protected function btNew_clickHandler(event:MouseEvent):void
			{
				this.inpNo.enabled=true;
				this.inpNo.text="";
				this.bedNo.text="";
				this.personName.text="";
				this.sex.selectedIndex=-1;
				this.age.text="";
				this.bloodCode.selectedIndex=-1;
				this.rhSign.selectedItem.rhSign='0';
				this.chargeType.selectedIndex=-1;
				this.wardCode.text="";
				this.deptCode.text="";
				this.doctor.text="";
				this.txtProductCode.text="";
				this.txtBloodCode.text="";
				this.txtTypeCode.text="";
				this.txtItemSpec.text="";
				if(arr==null)
				{
					return;
				}
				arr.removeAll();
				gridBloodLendList.dataProvider=arr;
				gridBloodLendList.invalidateList();
				btSave.enabled=true;
				btDelete.enabled=true;
				btCheck.enabled=true;
			}
			
			//打印
			protected function btPrint_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				//判断具有操作权限  -- 应用程序编号，菜单编号，权限编号
				// 01：增加                02：修改            03：删除
				// 04：保存                05：打印            06：审核
				// 07：弃审                08：输出            09：输入
//				if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, lstrPurview))
//				{
//					Alert.show("您无此按钮操作权限！", "提示");
//					return;
//				}
				var laryWillPrintItems:ArrayCollection=null;
				laryWillPrintItems = gridBloodLendList.dataProvider as ArrayCollection;
				for each(var item:Object in laryWillPrintItems)
				{
					item.rhSign=txtDisplay('rhSign',item.rhSign);
				}

				var dict:Dictionary = new Dictionary();
				dict["单位名称"] = AppInfo.sysUser.unitsName
				dict["日期"] =DateField.dateToString( new Date(),'YYYY-MM-DD');
				dict["主标题"] = "血液直接出库单";
				dict["制表人"] =AppInfo.sysUser.userName;
				dict["病人类型"] =this.lookType.selectedValue=='1'?'门诊':'住院';
				dict["标识号"] =this.patientId.text;
				dict["住院号"] =this.inpNo.text;
				dict["床号"] =this.bedNo.text;
				dict["姓名"] =this.personName.text;
				dict["性别"] =this.sex.selectedIndex==-1?"":this.sex.selectedItem.sexName;
				dict["年龄"] =this.age.text;
				dict["血型"] =this.bloodCode.selectedIndex==-1?"":this.bloodCode.selectedItem.bloodName;
				dict["RH阴"] =this.rhSign.selectedItem.rhSign=='1'?'阴性':'阳性';
				dict["费别"] =this.chargeType.selectedIndex==-1?"":this.chargeType.selectedItem.chargeTypeName;
				dict["病区"] =this.wardCode.text;
				dict["科室"] =this.deptCode.text;
				dict["医生"] =this.doctor.text;
				ReportViewer.Instance.Show("report/blood/deliver/bloodLend.xml", laryWillPrintItems, dict);
			}
			
			//病区字典
			protected function deptWard_clickHandler():void
			{
				DictWinShower.showDeptWardDict(showWard);
			}
			private function showWard(fItem:Object):void
			{
				wardCode.txtContent.text=fItem.deptName;
				master.wardCode=fItem.deptCode;
			}
			
			//临床科室字典
			protected function deptClinic_clickHandler():void
			{
				DictWinShower.showDeptClinicDict(showDept);
			}
			private function showDept(fItem:Object):void
			{
				deptCode.txtContent.text=fItem.deptName;
				master.deptCode=fItem.deptCode;
			}
			
			//医生档案字典
			protected function Doctor_clickHandler():void
			{
				DictWinShower.showDoctorDict(showDoctor);
			}
			private function showDoctor(fItem:Object):void
			{
				doctor.txtContent.text=fItem.personIdName;
				master.applyDoctor=fItem.personId;
			}
			
			//回车事件
			protected function keyUpCtrl(event:KeyboardEvent, ctrl:Object):void
			{
				// TODO Auto-generated method stub
				if (event.keyCode == 13)
				{
					ctrl.setFocus();
				}
			}
			
			//费别下拉单
			protected function chargeType_creationCompleteHandler(event:FlexEvent):void
			{
				chargeType.dataProvider=BaseDict.chargeTypeDict;				
			}			
			
			//性别下拉单
			protected function sex_creationCompleteHandler(event:FlexEvent):void
			{
				sex.dataProvider=BaseDict.sexDict;
			}
			
			//血型下拉单
			protected function bloodCode_creationCompleteHandler(event:FlexEvent):void
			{
				bloodCode.dataProvider=BaseDict.bloodDict;
			}
		
			//删行
			protected function btDelete_clickHandler(event:MouseEvent):void
			{
				if(!gridBloodLendList.selectedItem)
				{
					Alert.show("请选择要删除的产品信息！","提示信息");
					return;
				}
				Alert.show("您是否要删除该记录？", 
					"提示信息", Alert.YES | Alert.NO, null, delCallBack);
				
			}
			
			private function delCallBack(e:CloseEvent):void
			{
				if (e.detail == Alert.YES)
				{
					arr.removeItemAt(gridBloodLendList.selectedIndex);
					gridBloodLendList.dataProvider=arr;
					gridBloodLendList.invalidateList();
					this.txtProductCode.text="";
					this.txtBloodCode.text="";
					this.txtTypeCode.text="";
					this.txtItemSpec.text="";
//					Alert.show("删除成功！", "提示信息");
					return;
				}
			}

			//保存
			protected function btSave_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(!saveValidate())
				{
					return;
				}
				if(data.masterItem.autoId)
				{
					master.autoId=data.masterItem.autoId;
				}
				else
				{
					master.autoId=null;
				}
				master.patientType=lookType.selectedValue+'';
				master.patientId=patientId.text;
				master.inpNo=inpNo.text;
				master.bedNo=Number(StringUtil.trim(bedNo.text));
				master.personName=personName.text;
				master.sex=sex.selectedItem.sex;
				master.age=Number(StringUtil.trim(age.text));
				master.bloodCode=bloodCode.selectedItem.blood;
				if(rhSign.selectedItem.rhSign=='1')
				{
					master.rhType='1';
				}else
				{
					master.rhType='0';
				}
				master.chargeType=chargeType.selectedItem.chargeType;
				
				ro=RemoteUtil.getRemoteObject(destination,saveCallBack);
				ro.save(master,arr);				
			}
			private function saveCallBack(rev:Object):void
			{
				Alert.show("保存成功！","提示信息");
				btSave.enabled=false;
				btDelete.enabled=false;
				return;
			}
	
			//回车跳转事件
			private function toNextControl(e:KeyboardEvent, fcontrolNext:*, th:*):void
			{
				if (e.keyCode == Keyboard.ENTER)
				{
					if (th.className == "TextInputIcon")
					{
						if (th.txtContent.text == "" || th.txtContent.text == null)
						{
							if (th.id == "wardCode")
							{
								deptWard_clickHandler();
							}
							if (th.id == "deptCode")
							{
								deptClinic_clickHandler();
							}
							if (th.id == "doctor")
							{
								Doctor_clickHandler();
							}
						}
						else
						{
							if (fcontrolNext.className == "TextInputIcon")
							{
								fcontrolNext.txtContent.setFocus();
							}
							else
							{
								fcontrolNext.setFocus();
							}
						}
					}
					else
					{
						if (fcontrolNext.className == "TextInputIcon")
						{
							fcontrolNext.txtContent.setFocus();
						}
						else
						{
							fcontrolNext.setFocus();
						}
					}					
				}
			}
			//通过产品码查找输血明细
			protected function txtProductCode_enterHandler(event:FlexEvent):void
			{
				if(StringUtil.trim(txtProductCode.text)=="")
				{
					txtProductCode.setFocus();
					Alert.show("请输入血袋编号！","提示信息");
					return;
				}
				if(!productCode_check())
				{
					return;
				}
				ro=RemoteUtil.getRemoteObject(destination,findCallBack);
				ro.findBloodByProductCode(StringUtil.trim(txtProductCode.text));
			}
			private function findCallBack(rev:Object):void
			{
				if(rev==null||rev.data==null||rev.data.length < 1)
				{
					txtProductCode.setFocus();
					txtBloodCode.text="";
					txtTypeCode.text="";
					txtItemSpec.text="";
					Alert.show("没有相关产品,或该产品已使用！","提示信息");
					return;
				}
				arr=gridBloodLendList.dataProvider as ArrayCollection;
				var detail:BloodRdsDetail = rev.data[0];
				detail
				arr.addItem(detail);
				gridBloodLendList.dataProvider=arr;
				
				txtBloodCode.text=rev.data[0].bloodCode;
				txtTypeCode.text=rev.data[0].typeCode;
				txtItemSpec.text=rev.data[0].spec;
				var ob:Object;
				for each(var item:Object in arr)
				{
					ob = ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodTypeDict,'bloodType',item.typeCode);
					item.typeName=ob?ob.bloodTypeName:'';
				}
			}
			
			//rh阴 的label显示
			private function labelFun(item:*,col:DataGridColumn):*
			{
				if(col.dataField=='rhSign')
				{
					if(item.rhSign=='1')
					{
						return '阴性';
					}
					
					return '阳性';
				}
			}

			//产品码唯一性判断
			private function productCode_check():Boolean
			{
				if(arr!=null)
				{
					var pro:String=StringUtil.trim(txtProductCode.text);
					for(var i:int=0;i<arr.length;i++)
					{
						if(pro==arr[i].productCode)
						{
							Alert.show("该血袋编号已存在！","提示信息");
							return false;
						}
					}
				}
				return true;
			}

			//DataGrid单击
			protected function gridBloodLendList_clickHandler(event:MouseEvent):void
			{
				if(!gridBloodLendList.selectedItem)
				{
					return;
				}
				txtProductCode.text=gridBloodLendList.selectedItem.productCode;
				txtBloodCode.text=gridBloodLendList.selectedItem.bloodCode;
				txtTypeCode.text=gridBloodLendList.selectedItem.typeCode;
				txtItemSpec.text=gridBloodLendList.selectedItem.spec;
			}
			
			//textInput显示
			private function txtDisplay(item:*,txt:String):*
			{
				var itemObject:*;
				if(item=='txtBloodCode')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodDict,'blood',txt);
					if(!itemObject)
					{
						return '';
					}
					return itemObject.bloodName;
				}
				if(item=='txtTypeCode')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodTypeDict,'bloodType',txt);
					if(!itemObject)
					{
						return '';
					}
					return itemObject.bloodTypeName;
				}
				if(item=='rhSign')
				{
					if (txt == '' || txt == '0' || txt == null)
					{
						return '阳性';
					}
					else
					{
						return '阴性';
					}
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="lookType"/>
	</fx:Declarations>
	
	<s:HGroup width="100%"
			  height="31"
			  verticalAlign="middle"
			  paddingTop="10"
			  paddingLeft="6"
			  color="#0000FF">
		<mx:FormItem label="病人类型" 
					 labelWidth="65"
					 direction="horizontal">
			<s:RadioButton id="clinicType"
						   value="1"
						   label="门　诊"
						   groupName="lookType"
						   fontSize="14"
						   selected="true"
						   color="#0000FF"/>
			<s:RadioButton id="inpNoType"
						   value="2"
						   label="住　院"
						   groupName="lookType"
						   fontSize="14"
						   color="#0000FF" width="90"/>
		</mx:FormItem>
		<mx:FormItem label="标识号" 
					 width="285">
			<s:TextInput id="patientId" 
						 width="100%"
						 maxChars="20"
						 restrict="0-9"/>
		</mx:FormItem>
		<mx:FormItem label="住院号"
					 width="260"
					 labelWidth="55">
			<s:TextInput id="inpNo"
						 keyUp="keyUpCtrl(event,bedNo)"
						 maxChars="20"
						 restrict="0-9"
						 width="100%"/>
		</mx:FormItem>
		<mx:FormItem label="床　号"
					 width="100%"
					 labelWidth="47">
			<s:TextInput id="bedNo"
						 keyUp="keyUpCtrl(event,personName)"
						 maxChars="3"
						 restrict="0-9"
						 width="100%"/>
		</mx:FormItem>
	</s:HGroup>
	<s:HGroup width="100%"
			  height="31"
			  verticalAlign="middle"
			  paddingTop="10"
			  color="#0000FF">
		<mx:FormItem label="姓　名"
					 labelWidth="59"
					 width="230">
			<s:TextInput id="personName"
						 keyUp="keyUpCtrl(event,sex)"
						 maxChars="10"
						 restrict="^"
						 width="100%"/>
		</mx:FormItem>
		<mx:FormItem label="性　别" 
					 labelWidth="47"
					 width="150">
			<s:DropDownList id="sex"
							labelField="sexName"
							keyUp="keyUpCtrl(event,age)"
							creationComplete="sex_creationCompleteHandler(event)"
							width="100%"/>
		</mx:FormItem>
		<mx:FormItem label="年龄"
					 width="130"
					 >
			<s:TextInput id="age"
						 keyUp="keyUpCtrl(event,bloodCode)"
						 maxChars="3"
						 restrict="0-9"
						 width="100%"/>
		</mx:FormItem>
		<mx:FormItem label="血　型" labelWidth="55"
					 width="260">
			<s:DropDownList id="bloodCode"
							labelField="bloodName"
							keyUp="keyUpCtrl(event,rhSign)"
							creationComplete="bloodCode_creationCompleteHandler(event)"
							width="100%"/>
		</mx:FormItem>
		<mx:FormItem label="Rh(D)" 
					 labelWidth="47"
					 width="100%"
					 direction="horizontal">
			<s:DropDownList id="rhSign"
							labelField="rhSignName"
							color="{rhSign.selectedItem.rhSign == '0'?0xf60b0b:0x070707}"
							keyUp="keyUpCtrl(event,chargeType)"
							width="100%"
							dataProvider="{new ArrayCollection([{rhSign:'0',rhSignName:'阳性'},
							{rhSign:'1',rhSignName:'阴性'}])}"
							itemRenderer="cn.superion.blood.util.renderer.ItemRendererRhSign"/>
		</mx:FormItem>
	</s:HGroup>
	<s:HGroup width="100%"
			  height="31"
			  verticalAlign="middle"
			  color="#0000FF">
		<mx:FormItem label="费　别"
					 width="230"
					 labelWidth="59">
			<s:DropDownList id="chargeType"
							width="100%"
							labelField="chargeTypeName"
							keyUp="toNextControl(event,wardCode,chargeType)"
							creationComplete="chargeType_creationCompleteHandler(event)"/>
		</mx:FormItem>
		<s:Label text="病　区"
				 width="47"/>
		<controls:TextInputIcon id="wardCode"
								width="233"
								keyUp="toNextControl(event,deptCode,wardCode)"
								queryIconClick="deptWard_clickHandler()"/>
		
		<mx:Spacer width="3"/>
		<s:Label text="科　别"
				 width="47"/>
		<controls:TextInputIcon id="deptCode"
								width="200"
								keyUp="toNextControl(event,doctor,deptCode)"
								queryIconClick="deptClinic_clickHandler()"/>
		
		<s:Label text="医　生"
				 width="47"/>
		<controls:TextInputIcon id="doctor"
								width="100%"
								keyUp="toNextControl(event,txtProductCode,doctor)"
								queryIconClick="Doctor_clickHandler()"/>
		
	</s:HGroup>
	<s:HGroup width="100%">
		<mx:HRule width="100%"/>
	</s:HGroup>
	
	<!-- 表体部分 -->
	<s:BorderContainer width="500%"
					   height="500%"
					   backgroundColor="0xE2E8E8"
					   borderStyle="solid"
					   borderVisible="false">
		<s:VGroup width="100%"
				  height="100%">
			<s:HGroup width="100%"
					  paddingLeft="10">
				
				<mx:FormItem label="血袋编号"
							 width="220"
							 color="#0000FF">
					<s:TextInput id="txtProductCode"
								 width="100%"
								 maxChars="13"
								 restrict="0-9"
								 enter="txtProductCode_enterHandler(event)"/>
				</mx:FormItem>
				<mx:FormItem label="血  型"
							 width="287">
					<s:TextInput id="txtBloodCode"
								 width="100%"
								 enabled="false"
								 text="{txtDisplay('txtBloodCode',txtBloodCode.text)}"/>
				</mx:FormItem>
				<mx:FormItem label="成  份" 
							 labelWidth="55"
							 width="263">
					<s:TextInput id="txtTypeCode"
								 width="100%"
								 enabled="false"
								 text="{txtDisplay('txtTypeCode',txtTypeCode.text)}"/>
				</mx:FormItem>
				<mx:FormItem label="规  格"
							 width="100%">
					<s:TextInput id="txtItemSpec"
								 width="100%"
								 enabled="false"/>
				</mx:FormItem>
				
			</s:HGroup>
			<controls:SuperDataGrid id="gridBloodLendList"
									hasRowNo="true"
									width="100%"
									height="100%"
									styleName="dataGrid"
									click="gridBloodLendList_clickHandler(event)">
				<controls:columns>
					<mx:DataGridColumn headerText="序号"
									   width="2"/>
					<mx:DataGridColumn headerText="血袋编号"
									   dataField="productCode"
									   width="4"/>
					<mx:DataGridColumn headerText="血型"
									   dataField="bloodName"
									   width="3"/>
					<mx:DataGridColumn headerText="血液成份"
									   dataField="typeName"
									   width="4"/>
					<mx:DataGridColumn headerText="Rh(D)"
									   dataField="rhSign"
									   width="2"
									   labelFunction="labelFun"/>
					<mx:DataGridColumn headerText="规格"
									   dataField="spec"
									   width="4"/>
					<mx:DataGridColumn headerText="采血日期"
									   dataField="collectDate"
									   width="5"/>
					<mx:DataGridColumn headerText="失效日期"
									   dataField="availDate"
									   width="5"/>
					
				</controls:columns>
			</controls:SuperDataGrid>
			<!-- 操作按钮部分 -->
			<s:HGroup height="31"
					  paddingBottom="10"
					  horizontalAlign="right"
					  gap="5"
					  width="100%">
				<mx:LinkButton id="btNew"
							   label=" 新 建"
							   fontSize="12"
							   width="86"
							   height="26"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/new20.png')"
							   click="btNew_clickHandler(event)"/>
				<mx:LinkButton id="btDelete"
							   label=" 删 行"
							   fontSize="12"
							   width="86"
							   height="26"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/delete20.png')"
							   click="btDelete_clickHandler(event)"/>
				<mx:LinkButton id="btSave"
							   label=" 保 存"
							   fontSize="12"
							   width="86"
							   height="26"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/save20.png')"
							   click="btSave_clickHandler(event)"/>
				<mx:LinkButton id="btCheck"
							   label=" 确 定"
							   fontSize="12"
							   width="86"
							   height="26"							   
							   visible="false"
							   includeInLayout="false"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/check20.png')"
							   click="btCheck_clickHandler(event)"/>
				<mx:LinkButton id="btPrint"
							   label=" 打 印"
							   fontSize="12"
							   width="86"
							   height="26"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/print20.png')"
							   click="btPrint_clickHandler('05','1')"/>
				<mx:LinkButton id="btReturn"
							   label=" 返 回"
							   fontSize="12"
							   width="86"
							   height="26"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/return20.png')"
							   click="btReturn_clickHandler(event)"/>
				<mx:Spacer width="5"/>
			</s:HGroup>
			<mx:Spacer height="5"/>
		</s:VGroup>
	</s:BorderContainer>
	
</s:TitleWindow>
