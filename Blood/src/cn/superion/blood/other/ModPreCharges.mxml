<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   layout="vertical"
		   width="100%"
		   height="100%"
		   paddingBottom="5"
		   paddingLeft="5"
		   paddingRight="5"
		   paddingTop="5"
		   horizontalGap="0"
		   creationComplete="module1_creationCompleteHandler(event)"
		   verticalGap="0"
		   xmlns:controls="cn.superion.base.components.controls.*">
	<fx:Script>
		<![CDATA[
			import cn.superion.base.AppInfo;
			import cn.superion.base.config.BaseDict;
			import cn.superion.base.config.ParameterObject;
			import cn.superion.base.util.ArrayCollUtils;
			import cn.superion.base.util.DateUtil;
			import cn.superion.base.util.FormUtils;
			import cn.superion.base.util.PurviewUtil;
			import cn.superion.base.RemoteUtil;
			import cn.superion.blood.deliver.view.PriceListUtil;
			import cn.superion.dataDict.DictWinShower;
			import cn.superion.main.treeMenu.MainFrameUtil;
			import cn.superion.report2.ReportPrinter;
			import cn.superion.report2.ReportViewer;
			import cn.superion.vo.blood.BloodBillDetail;
			import cn.superion.vo.blood.BloodCheckMaster;
			import cn.superion.vo.blood.BloodInPatsVisit;
			import cn.superion.vo.blood.BloodRdsDetail;
			import cn.superion.vo.blood.VBloodRds;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.ListCollectionView;
			import mx.collections.Sort;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.FormItemLabel;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.formatters.DateBase;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import spark.events.TextOperationEvent;

			private const MENU_NO:String="0404";

			[Bindable]
			private var destination:String="patientApplyImpl";
			private var autoId:String='';
			private var ro:RemoteObject;
			private var arr:ArrayCollection=null;
			private var master:BloodCheckMaster=new BloodCheckMaster();
			private var _spec:String="";
			private var _typeCode:String="";
			private var _rhType:String=null;
			private var bloodBillDetail:ArrayCollection=new ArrayCollection();
			public var selectAll:Boolean=false;
			private var bloodPat:BloodInPatsVisit=new BloodInPatsVisit();


			protected function module1_creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener("delRow", delRowHandler);
				inpNo.setFocus();
			}

			private function delRowHandler(event:Event):void
			{
				var tempAry:ArrayCollection=gridPatientApplyList.dataProvider as ArrayCollection;
				tempAry.removeItemAt(gridPatientApplyList.selectedIndex);
				gridPatientApplyList.dataProvider=tempAry;
			}

			//返回
			protected function btReturn_clickHandler(event:MouseEvent):void
			{
				MainFrameUtil.closeTab(this);
			}
			
			//新建
			protected function btAdd_clickHandler(event:MouseEvent):void
			{ 
				inpNo.text = "";
				personName.text = "";
				sex.text = "";
				age.text = "";
				bloodCode.text = "";
				rhSign.text = "";
				deptCode.text = "";
				wardCode.text = "";
				applyDoctor.text = "";
				bedNo.text = "";
				chargeType.text = "";
				prepayments.text = "";
				spec.text = "";
				spec.editable =true;
				unitPrice.text = "";
				typeCode.enabled = true;
				typeCode.selectedIndex = 0;
				gridPatientApplyList.dataProvider = [];
				
			}
			//保存事件
			protected function btSave_clickHandler(event:MouseEvent):void
			{
				/* if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, "04"))
				   {
				   Alert.show("您无此按钮操作权限！", "提示");
				   return;
				 } */
				/* if(_rhType == '0')
				   {
				   Alert.show("该人员是Rh阳性", "提示");
				   return;
				 } */
				var items:ArrayCollection=gridPatientApplyList.dataProvider as ArrayCollection;
				Alert.show("确定收费？", "提示", Alert.YES | Alert.NO, null, function(e:CloseEvent):void
					{
						if (e.detail == Alert.NO)
							return;
						var opary:Array=[];
						var ro:RemoteObject=RemoteUtil.getRemoteObject('preBloodFeeImpl', function(rev:Object):void
							{
								if (rev.success)
								{
									Alert.show('收费成功', '提示');
									btSave.enabled=false;
									prepayments.text=rev.data[0]
									gridPatientApplyList.enabled=false;
									spec.editable=false;
									typeCode.enabled=false;
									gridPatientApplyList.editable=false;
								}
							});
						ro.save(bloodPat, items);
					});
			}

			private function convertToBloodBillDetail(source:ArrayCollection, target:ArrayCollection):ArrayCollection
			{
				return null
			}

			//打印
			protected function btPrint_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				var laryWillPrintItems:ArrayCollection=null;
				laryWillPrintItems=gridPatientApplyList.dataProvider as ArrayCollection;
				for each (var item:Object in laryWillPrintItems)
				{
					item.rhSign=txtDisplay('rhSign', item.rhSign);
				}
				var dict:Dictionary=new Dictionary();
				dict["主标题"]=AppInfo.sysUser.unitsName + "病人输血发放单";
				dict["住院号"]=data.masterItem.inpNo;
				dict["床号"]=data.masterItem.bedNo;
				dict["姓名"]=data.masterItem.personName;
				dict["性别"]=txtDisplay('sex', data.masterItem.sex);
				dict["年龄"]=data.masterItem.age;
				dict["血型"]=txtDisplay('bloodCode', data.masterItem.bloodCode);
				dict["RH"]=data.masterItem.rhSign == '1' ? '阴性' : '阳性';
				dict["费别"]=txtDisplay('chargeType', data.masterItem.chargeType);
				dict["病区"]=txtDisplay('wardCode', data.masterItem.wardCode);
				dict["科室"]=txtDisplay('deptCode', data.masterItem.deptCode);
				dict["送检医生"]=txtDisplay('applyDoctor', data.masterItem.applyDoctor);
				dict["单据编号"]=data.masterItem.billNo;
				dict["检验日期"]=DateField.dateToString(data.masterItem.examDate, 'YYYY-MM-DD');
				dict["报告时间"]=DateUtil.dateToString(new Date(), 'YYYY-MM-DD hh:mm:ss');
				dict["检验者"]=txtDisplay('applyDoctor', data.masterItem.examDoctor);
				dict["核对者"]='';
				dict["取血者"]='';
				dict["接收者"]='';
				dict["交接时间"]='';
				var strXml:String = "report/blood/deliver/patientApply1.xml";
				loadReportXml(strXml,laryWillPrintItems,dict,"0");
//				ReportViewer.Instance.Show("report/blood/deliver/patientApply1.xml", laryWillPrintItems, dict);
			}
			private function loadReportXml(reportUrl:String,faryDetails:ArrayCollection, fdict:Dictionary,fprintSign:String):void{
				var loader:URLStream=new URLStream();
				loader.addEventListener(Event.COMPLETE, function(event:Event):void{
					var stream:URLStream = event.currentTarget as URLStream;
					var xml:XML=XML(stream.readMultiByte(stream.bytesAvailable,"utf-8"));
					if (fprintSign == "1")
					{
						ReportPrinter.Print(xml, faryDetails, fdict);
					}
					else
					{
						ReportViewer.Instance.Show(xml, faryDetails, fdict);
					}
				});
				var url:URLRequest = new URLRequest(reportUrl);
				loader.load(url);
			}
			//textInput文本显示方式
			private function txtDisplay(item:*, txt:String):*
			{
				var itemObject:*;
				//血型
				if (item == 'bloodCode')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodDict, 'blood', txt);
					if (!itemObject)
					{
						return '';
					}
					return itemObject.bloodName;
				}
				//性别
				if (item == 'sex')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.sexDict, 'sex', txt);
					if (!itemObject)
					{
						return '';
					}
					return itemObject.sexName;
				}
				//RH阴
				if (item == 'rhSign')
				{
					if (txt == '' || txt == '0' || txt == null)
					{
						return '阳性';
					}
					else
					{
						return '阴性';
					}
				}
				//费别
				if (item == 'chargeType')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.chargeTypeDict, 'chargeType', txt);
					if (!itemObject)
					{
						return '';
					}
					return itemObject.chargeTypeName;
				}
				//产品码对应的血型
				if (item == 'txtBloodCode')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodDict, 'blood', txt);
					if (!itemObject)
					{
						return '';
					}
					return itemObject.bloodName;
				}
				//产品码对应的成份
				if (item == 'txtTypeCode')
				{
					itemObject=ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodTypeDict, 'bloodType', txt);
					if (!itemObject)
					{
						return '';
					}
					return itemObject.bloodTypeName;
				}
			}

			/**
			 * LabelFunction :根据RH阴性：0，1，分别显示否，是
			 * */
			/* private function labFunRhSign(item:Object,column:DataGridColumn):String{
			   switch (item.rhSign) {
			   case "0":
			   return "阳性";
			   break;
			   case "1":
			   return "阴性";
			   break;
			   default:
			   return " ";
			   break;
			   }
			 } */
			/**
			 * LabelFunction :根据成分编码显示成分名称
			 * */
			/* 	private function labFunTypeCode(item:Object,column:DataGridColumn):String{
			   var ary:ArrayCollection = BaseDict.bloodTypeDict;
			   if(ary.length  == 0){
			   return " ";
			   }
			   var name:String ="";
			   for each (var obj:Object  in ary){
			   if(obj.bloodType == item.typeCode){
			   name =  obj.bloodTypeName;
			   break;
			   }
			   }
			   return name;
			 } */

			/**
			 * LabelFunction :根据血型编码显示血型名
			 * */
			/* private function labFunBloodCode(item:Object,column:DataGridColumn):String{

			   var ary:ArrayCollection = BaseDict.bloodDict;
			   if(ary.length  == 0){
			   return " ";
			   }
			   var name:String ="";
			   for each (var obj:Object  in ary){
			   if(obj.blood == item.bloodCode){
			   name =  obj.bloodName;
			   break;
			   }
			   }
			   return name;
			 }	 */
			/* private function labFunStatus(item:Object,column:DataGridColumn):String{
			   if(item.refundSign == "1"){
			   return "已退费";
			   }else{
			   return "";
			   }
			 } */
			/**
			 * labFunction 操作日期
			 * */
			/* private function labFunOperateDate(item:Object,column:DataGridColumn):String{
			   if(item.operateDate ==null ||item.operateDate =="")
			   return "";
			   return DateUtil.dateToString(item.operateDate,"YYYY-MM-DD hh:mm:ss");
			 } */
			protected function rhSign_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
//				rhSign.dataProvider=new ArrayCollection([
//					{rhSign:'0',rhSignName:'阳性'},{rhSign:'1',rhSignName:'阴性'}]);

			}

			protected function cboxBloodType_creationCompleteHandler(event:FlexEvent):void
			{
				typeCode.dataProvider=BaseDict.bloodTypeDict;
				assiUnits.text=BaseDict.bloodTypeDict[0].units;
			}


			protected function inpNo_enterHandler():void
			{
				var ro:RemoteObject=RemoteUtil.getRemoteObject('preBloodFeeImpl', function(o:Object):void
					{
						if (!o || o.data.length == 0)
							return;
						//加载主记录
						var m:BloodInPatsVisit=o.data[0] as BloodInPatsVisit;
						bloodPat=m;
						bedNo.text=m.bedNo;
						_rhType=m.rhType;
						personName.text=m.personName;
						age.text=m.age;
						sex.text=m.sex == "1" ? "男" : m.sex == "2" ? "女" : "其他";
						rhSign.text=m.rhType == "1" ? "阴性" : "阳性";
						chargeType.text=m.chargeType;
						bloodCode.text=m.bloodName;
						var _wardItem:Object=ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict, 'dept', m.wardCode);
						var _deptItem:Object=ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict, 'dept', m.deptCode);
						var _doctorItem:Object=ArrayCollUtils.findItemInArrayByValue(BaseDict.personIdDict, 'personId', m.chargeDoctor);
						
						if(_wardItem)
						{
							wardCode.text=m.wardCode.charCodeAt(0) > 122 ? m.wardCode : m.wardCode == "" || null ?  "" : _wardItem.deptName;
						}

						if(_deptItem)
						{
							deptCode.text=m.deptCode.charCodeAt(0) > 122 ? m.deptCode : m.deptCode == "" || null ? "" : _deptItem.deptName;							
						}
						if(_doctorItem)
						{
							applyDoctor.text=m.chargeDoctor.charCodeAt(0) > 122 ? m.chargeDoctor : m.chargeDoctor == "" || null ? "" : _doctorItem.personIdName;							
						}

						prepayments.text=m.prepayments;
						//加载列表
						var lst:ArrayCollection=o.data[1] as ArrayCollection;
						typeCode.openDropDown();
						typeCode.setFocus();
//					gridBloodReturnDetail.dataProvider = lst;
					});
				ro.findPats(inpNo.text);
			}


			protected function gridPatientApplyList_changeHandler(event:ListEvent):void
			{
				typeCode.selectedIndex=codeToName("bloodType", gridPatientApplyList.selectedItem.typeCode, BaseDict.bloodTypeDict)[0];
			}

			private function codeToName(codeName:String, codeValue:String, dict:ArrayCollection):Array
			{
				if (dict.length == 0)
					return null;
				var ary:Array=[];
				var i:int=0;
				for each (var item:Object in dict)
				{
					i++;
					if (codeValue == item[codeName])
					{
						ary[0]=i - 1;
						ary[1]=codeValue;
						ary[2]=item[codeName + 'Name'];
						break;
					}
				}
				return ary;
			}

			protected function spec_enterHandler(event:FlexEvent):void
			{
				/* PriceListUtil.TakeItemPrice('bloodTypeDictImpl', 'findById', typeCode.selectedItem.bloodType, spec.text,"hisCode", function(ss:Object):void
				   {
				   if (!ss || ss.data.length == 0)
				   return;
				   var tempAry:ArrayCollection = gridPatientApplyList.dataProvider as ArrayCollection;
				   //it对应检验项目字典
				   var it:BloodBillDetail= new BloodBillDetail();
				   it.itemCode = ss.data[0].itemCode; //it.itemCode，显示价表的itemcode
				   unitPrice.text = ss.data[0].price;
				   it.itemName = ss.data[0].itemName;
				   it.itemId = ss.data[0].itemCode;
				   it.units = ss.data[0].units;
				   it.itemSpec = ss.data[0].itemSpec;
				   it.unitPrice = ss.data[0].price; //单价
				   it.itemClass = ss.data[0].itemClass; //单价
				   it.amount = 1;
				   it.rcptClass = ss.data[0].classOnInpRcpt;
				   it.reckonClass = ss.data[0].classOnReckoning;
				   it.charges = ss.data[0].price * it.amount;//金额
				   tempAry.addItem(it);
				   gridPatientApplyList.dataProvider = tempAry;

				 }); */
				//
				var ro:RemoteObject=RemoteUtil.getRemoteObject('hisBaseDictImpl', function(ss:Object):void
					{
						if (!ss || !ss.data[0] || ss.data.length == 0)
							return;
						var tempAry:ArrayCollection=gridPatientApplyList.dataProvider as ArrayCollection;
						//it对应检验项目字典
						var it:BloodBillDetail=new BloodBillDetail();
						it.itemCode=ss.data[0].itemCode; //it.itemCode，显示价表的itemcode
						unitPrice.text=ss.data[0].price;
						it.itemName=ss.data[0].itemName;
						it.itemId=ss.data[0].itemCode;
						it.units=ss.data[0].units;
						it.bloodTypeCode=bloodPat.bloodName;
						it.itemSpec=ss.data[0].itemSpec;
						it.itemClass=ss.data[0].itemClass; //单价
						it.amount=Number(spec.text);
						it.unitPrice=ss.data[0].price;
						it.rcptClass=ss.data[0].classOnInpRcpt;
						it.reckonClass=ss.data[0].classOnReckoning;
						it.charges=it.unitPrice * it.amount; //金额
						tempAry.addItem(it);
						gridPatientApplyList.dataProvider=tempAry;


					});
				ro.findItemPrice(typeCode.selectedItem.hisCode, spec.text, typeCode.selectedItem.units);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="phoFiveCode"/>
		<s:RadioButtonGroup id="noType"/>
	</fx:Declarations>
	<s:BorderContainer width="100%"
					   height="100%"
					   backgroundColor="0xE2E8E8"
					   borderVisible="false">
		<s:VGroup x="0"
				  y="0"
				  width="100%"
				  height="100%">
			<s:HGroup width="100%"
					  height="31"
					  verticalAlign="middle">
				<!--<s:RadioButton  label="住院号"
					 selected="true"
					 groupName="noType"/>-->
				<s:Label text="住院号"/>
				<s:TextInput id="inpNo"
							 width="150"
							 restrict="0-9"
							 enter="inpNo_enterHandler()"
							 maxChars="20"/>
				<mx:LinkButton id="btQuery"
							   height="24"
							   label=" 查 找"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/query20.png')"
							   click="inpNo_enterHandler()"/>
			</s:HGroup>
			<s:HGroup paddingLeft="10">
				<mx:FormItem label="姓名">
					<s:TextInput id="personName"
								 width="139"
								 maxChars="20"
								 enabled="false"/>
				</mx:FormItem>
				<mx:FormItem label="性别">
					<s:TextInput id="sex"
								 width="43"
								 maxChars="1"
								 enabled="false"/>
				</mx:FormItem>
				<mx:FormItem label="年龄">
					<s:TextInput id="age"
								 width="50"
								 maxChars="3"
								 enabled="false"/>
				</mx:FormItem>
				<mx:FormItem label="血型">
					<s:TextInput id="bloodCode"
								 width="84"
								 enabled="false"
								 text="{txtDisplay('bloodCode',bloodCode.text)}"/>
				</mx:FormItem>
				<mx:FormItem label="Rh(D)"
							 width="100%"
							 direction="horizontal">
					<s:TextInput id="rhSign"
								 width="122"/>
					<!--<s:DropDownList id="rhSign"
						 labelField="rhSignName"
						 width="100"
						 color="{rhSign.selectedItem.rhSign == '0'?0xf60b0b:0x070707}"
						 selectedIndex="0"
						 creationComplete="rhSign_creationCompleteHandler(event)"
						 itemRenderer="cn.superion.blood.util.renderer.ItemRendererRhSign"
						 />-->

				</mx:FormItem>

			</s:HGroup>
			<s:HGroup width="100%"
					  height="31"
					  paddingLeft="10"
					  verticalAlign="middle">
				<mx:FormItem label="科室">
					<s:TextInput id="deptCode"
								 width="139"
								 enabled="false"/>
				</mx:FormItem>
				<mx:FormItem label="病区">
					<s:TextInput id="wardCode"
								 width="138"
								 enabled="false"/>
				</mx:FormItem>

				<mx:FormItem label="床号">
					<s:TextInput id="bedNo"
								 width="84"
								 maxChars="3"
								 enabled="false"/>
				</mx:FormItem>
				<mx:FormItem label="医 生">
					<s:TextInput id="applyDoctor"
								 enabled="false"
								 width="122"/>
				</mx:FormItem>

			</s:HGroup>
			<s:HGroup width="100%"
					  paddingLeft="10">
				<mx:FormItem label="费别">
					<s:TextInput id="chargeType"
								 width="139"
								 enabled="false"/>
				</mx:FormItem>
				<mx:FormItem label="余额">
					<s:TextInput id="prepayments"
								 width="138"
								 enabled="false"/>
				</mx:FormItem>

				<!--<mx:FormItem label="总计" color="blue"
					 >
					 <s:TextInput id="itemSum"
					 width="138"
					 enabled="false"
					 />
					 </mx:FormItem>-->
			</s:HGroup>


			<s:BorderContainer width="500%"
							   height="500%"
							   backgroundColor="0xE2E8E8"
							   borderStyle="solid"
							   borderVisible="false">
				<s:VGroup id="transfDetail"
						  width="100%"
						  height="100%">
					<s:HGroup width="100%"
							  id="form4"
							  paddingLeft="10">

						<mx:FormItem label="成份"
									 color="blue">
							<s:DropDownList id="typeCode"
											color="#000000"
											selectedIndex="0"
											keyDown="if(event.keyCode!=13)return;spec.setFocus();
											assiUnits.text = event.target.selectedItem.units ;"
											requireSelection="true"
											labelField="bloodTypeName"
											change="if(!gridPatientApplyList.selectedItem)
											{  assiUnits.text = event.target.selectedItem.units ;
											   return;}
											assiUnits.text = event.target.selectedItem.units ;
											gridPatientApplyList.selectedItem.typeName = event.target.selectedItem.bloodTypeName ;
											gridPatientApplyList.selectedItem.assiUnits = event.target.selectedItem.units ;"
											creationComplete="cboxBloodType_creationCompleteHandler(event)"
											width="183"/>
						</mx:FormItem>
						<mx:FormItem label="规格"
									 color="blue">
							<s:TextInput id="spec"
										 restrict="0-9."
										 width="138"
										 enter="spec_enterHandler(event)"/>
						</mx:FormItem>
						<mx:FormItem>
							<mx:Text width="50"
									 id="assiUnits"/>
						</mx:FormItem>
						<mx:FormItem label="单价">
							<s:TextInput id="unitPrice"
										 enabled="false"
										 width="101"/>
						</mx:FormItem>
					</s:HGroup>
					<controls:SuperDataGrid id="gridPatientApplyList"
											hasRowNo="true"
											width="100%"
											height="100%"
											styleName="dataGrid">
						<controls:columns>
							<mx:DataGridColumn headerText="序号"
											   dataField="rowNum"
											   width="40"
											   editable="false"/>
							<mx:DataGridColumn headerText="项目分类"
											   dataField="itemClass"
											   width="60"
											   editable="false"/>
							<mx:DataGridColumn headerText="项目名称"
											   dataField="itemName"
											   width="160"
											   editable="false"/>
							<mx:DataGridColumn headerText="规格"
											   dataField="amount"
											   width="80"
											   editable="false"/>
							<mx:DataGridColumn headerText="单位"
											   dataField="units"
											   width="50"
											   editable="false"/>
							<mx:DataGridColumn headerText="单价"
											   dataField="unitPrice"
											   width="50"
											   editable="false"/>
							<mx:DataGridColumn headerText="删除"
											   width="50">
								<mx:itemRenderer>
									<fx:Component>
										<mx:LinkButton useHandCursor="true"
													   buttonMode="true"
													   mouseChildren="false"
													   icon="@Embed('/assets/images/button/delete20.png')"
													   toolTip="删除"
													   click="dispatchEvent(new Event('delRow', true))"/>
									</fx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</controls:columns>
					</controls:SuperDataGrid>
					<s:HGroup height="31"
							  paddingBottom="10"
							  horizontalAlign="right"
							  gap="5"
							  width="100%">
						<mx:LinkButton id="btAdd"
									   label=" 新 建"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/confirm20.png')"
									   click="btAdd_clickHandler(event)"/>
						<mx:LinkButton id="btSave"
									   label=" 确 定"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/confirm20.png')"
									   click="btSave_clickHandler(event)"/>
						<mx:LinkButton id="btReturn"
									   label=" 返 回"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/return20.png')"
									   click="btReturn_clickHandler(event)"/>
						<mx:Spacer width="5"/>
					</s:HGroup>
				</s:VGroup>

			</s:BorderContainer>
		</s:VGroup>

	</s:BorderContainer>
</mx:Module>
