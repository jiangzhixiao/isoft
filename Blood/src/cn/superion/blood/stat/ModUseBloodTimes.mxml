<?xml version="1.0" encoding="utf-8"?>
<!--
	病区用血统计模块
	author:芮玉红   2012.06.27
	checked by：
-->
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   layout="vertical"
		   width="100%"
		   height="100%"
		   paddingBottom="5"
		   paddingLeft="5"
		   paddingRight="5"
		   paddingTop="5"
		   horizontalGap="0"
		   verticalGap="0"
		   backgroundColor="#E2E8E8"
		   horizontalScrollPolicy="auto"
		   creationComplete="doInit()"
		   xmlns:controls="cn.superion.base.components.controls.*"
		   xmlns:config="cn.superion.base.config.*" xmlns:util="cn.superion.blood.util.*">
	
	<fx:Script>
		<![CDATA[
			import cn.superion.base.AppInfo;
			import cn.superion.base.config.BaseDict;
			import cn.superion.base.config.GridColumn;
			import cn.superion.base.config.ParameterObject;
			import cn.superion.base.util.ArrayCollUtils;
			import cn.superion.base.util.FormUtils;
			import cn.superion.base.RemoteUtil;
			import cn.superion.main.treeMenu.MainFrameUtil;
			import cn.superion.blood.util.renderer.IRCheckBox;
			import cn.superion.dataDict.DictWinShower;
			import cn.superion.report2.ReportPrinter;
			import cn.superion.report2.ReportViewer;
			
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import flexlib.scheduling.util.DateUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.FlexEvent;
			import mx.rpc.remoting.RemoteObject;
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;
			
			private var destination:String='patientUseBloodImpl';
			private var params:Object={};
			private var _visitDoctor:String = "";
			private var _visitDept:String = "";
			public var selectedBloodComponents:Array=[]; //选中的成分列表
			[Bindable]
			private var isData:Boolean=false;
			
			
			private function doInit():void
			{
				var bloodTypeArc:ArrayCollection=BaseDict.bloodTypeDict;
				for each (var itemType:Object in bloodTypeArc)
				{
					if (itemType.bloodTypeName == '全部')
					{
						bloodTypeArc.removeItemAt(bloodTypeArc.getItemIndex(itemType));
					}
				}
//				bloodTypeArc.addItemAt({bloodType: "", bloodTypeName: '全部'}, 0);
				ddlBloodtype.dataProvider=bloodTypeArc;
				ddlBloodtype.selectedIndex=-1;
				ddlBloodtype.textInput.editable=false;
			}
			
			/**
			 * 查询按钮
			 * */
			protected function btQuery_clickHandler():void
			{
				params['typeCode']=ddlBloodtype.cbxSelectedItemCode.toArray();
				params["beginDate"] = dfStartDate.selectedDate;
				params["endDate"] = addOneDay(dfEndDate.selectedDate);
				var paramQuery:ParameterObject = new ParameterObject();
				paramQuery.conditions = params;
				
				var ro:RemoteObject = RemoteUtil.getRemoteObject(destination, function(rev:Object):void
				{
					
					if(rev.data && rev.data.length > 0)
					{
						sum.text = rev.data[0];
						return;
					}else{
						sum.text = '';
					}
				});
				ro.findBloodTypeUseTimes(paramQuery);
			}
			
			/**
			 * 给指定日期+(24*3600*1000-1000);
			 * */
			private function addOneDay(date:Date):Date{
				return DateUtil.addTime(new Date(date), DateUtil.DAY_IN_MILLISECONDS - 1000);
			}
			
			/**
			 * 打印、预览处理事件
			 * @param 参数说明
			 * 		  lstrPurview 权限编号;
			 * 		  isPrintSign 打印输出标示,预览：2，直接打印：1，输出：0
			 */
			protected function btPreview_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				
//				var dataList:ArrayCollection=gdWardUseBloodList.dataProvider as ArrayCollection;
					
//				for each(var obj:Object in dataList)
//				{
//					obj.assiAmountUnits=obj.assiAmount+obj.assiUnits;
//				}
				var dict:Dictionary = new Dictionary();
//				dict["主标题"] = "病区"+hours.value+"小时用血统计";
				dict["单位名称"] = AppInfo.sysUser.unitsName;
				dict["日期"] = DateField.dateToString(new Date(), 'YYYY-MM-DD');
				dict["开始日期"] = DateField.dateToString(dfStartDate.selectedDate, 'YYYY-MM-DD');
				dict["结束日期"] = DateField.dateToString(dfEndDate.selectedDate, 'YYYY-MM-DD');
				dict['成份']=ddlBloodtype.textInput.text;
				
				dict["制表人"] = AppInfo.sysUser.userName;
//				if(isPrintSign == '1')
//				{
//					ReportPrinter.LoadAndPrint("report/blood/stat/Pat24HoursUseBlood.xml", dataList, dict);
//				}
//				else
//				{
//					ReportViewer.Instance.Show("report/blood/stat/Pat24HoursUseBlood.xml", dataList, dict);
//				}
			}
			
			
			/**
			 * 输出
			 * */
			protected function btExport_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				
//				DefaultPage.exportExcel(gdWardUseBloodList,"病区"+hours.value+"小时用血统计");
				
			}

			private function labFun(item:Object, column:DataGridColumn):String
			{
				if (column.headerText == '血液成份')
				{
					var typeItem:Object=ArrayCollUtils.findItemInArrayByValue(BaseDict.bloodTypeDict, 'bloodType', item.typeCode);
					item.typeName=typeItem == null ? '' : typeItem.bloodTypeName;
					return item.typeName;
				}
				
				return '';
			}

			
			protected function keyUpCtrl(event:KeyboardEvent, ctrl:Object):void
			{
				if (event.keyCode == 13)
				{
					if (ctrl.className == "DateField")
					{
						ctrl.open();
					}
					if (event.currentTarget.className == "TextInput")
					{
						if (StringUtil.trim(event.currentTarget.text).length == 0)
						{
							return;
						}
					}
					ctrl.setFocus();
				}
			}
			
			/**
			 * 回车实现查找功能
			 * */
			private function keUpHandler(e:KeyboardEvent):void
			{
				if(!btQuery.enabled){
					return;
				}	
				if (e.keyCode == Keyboard.ENTER)
				{
					btQuery_clickHandler();
				}
			}
			
			//显示成份字典
			protected function ddlBloodtype_creationCompleteHandler(event:FlexEvent):void
			{
				ddlBloodtype.dataProvider=BaseDict.bloodTypeDict;
			}
			
			/**
			 * 返回主页面
			 * */
			protected function btReturn_clickHandler(event:MouseEvent):void
			{
				MainFrameUtil.closeTab(this);
			}
			
			
			protected function ddlBloodtype_changeHandler(event:IndexChangeEvent):void
			{
//				// TODO Auto-generated method stub
//				if(ddlBloodtype.selectedIndex !=0)
//					gdWardUseBloodList.sumFields=["assiAmount"];
//				else
//					gdWardUseBloodList.sumFields=[];
			}
			

			protected function checkbox1_changeHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				var ss:Object = event;
			}

		]]>
	</fx:Script>	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:RadioButtonGroup id="grp"/>
	</fx:Declarations>
	<s:Scroller id="scrol"
				width="100%"
				height="100%">
		<s:VGroup width="100%"
				  height="100%"
				  gap="0">
			<!-- 表体部分 -->
			<s:BorderContainer width="100%"
							   height="100%"
							   backgroundColor="0xE2E8E8"
							   borderStyle="solid"
							   borderColor="#9ABBE6">
				<s:VGroup width="100%"
						  height="100%"
						  paddingLeft="5"
						  paddingRight="5">
					<!-- 查询条件区 -->
					<s:HGroup width="100%"
							  id="queryPanelTi"
							  height="33"
							  paddingLeft="5"
							  paddingTop="5"
							  verticalAlign="middle">
						<s:CheckBox id="dateEnabled" label="发血日期"/>
						<mx:DateField id="dfStartDate"
									  keyUp="keyUpCtrl(event,dfEndDate)"
									  width="111"
									  formatString="YYYY-MM-DD"
									  enterFrame="{dfStartDate.selectedDate==null?dfStartDate.selectedDate=new Date():dfStartDate.selectedDate}"
									  selectableRange="{{rangeEnd:new Date()}}"
									  showToday="true"/>
						<s:Label text="-"
								 width="8"/>
						<mx:DateField id="dfEndDate"
									  width="111"
									  formatString="YYYY-MM-DD"
									  enterFrame="{dfEndDate.selectedDate==null?dfEndDate.selectedDate=new Date():dfEndDate.selectedDate}"
									  selectableRange="{{rangeStart:dfStartDate.selectedDate, rangeEnd:new Date()}}"
									  showToday="true"
									  keyUp="keyUpCtrl(event,btQuery)"/>
					</s:HGroup>
					<s:HGroup height="33" width="100%"
							  paddingLeft="5"
							  paddingTop="5"
							  verticalAlign="middle">
						<s:Label text="使　用"/>
						<util:SelectedComboBox id="ddlBloodtype"
										change="ddlBloodtype_changeHandler(event)"
										labelField="bloodTypeName"
										width="552"
										editable="true"
										labelFieldCode="bloodType"
										isTextSpan="true"
										keyUp="keyUpCtrl(event,btQuery)" />
						<mx:LinkButton id="btQuery"
									   height="24"
									   label=" 查 找"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/query20.png')"
									   click="btQuery_clickHandler()"
									   keyUp="keUpHandler(event)"/>
						
					</s:HGroup>
					
					<s:HGroup height="33" width="100%"
							  paddingLeft="5"
							  paddingTop="5"
							  verticalAlign="middle">
						<s:Label text="总人次"/>
						<s:TextInput id="sum" editable="false"/>
						
					</s:HGroup>
					<!-- 操作按钮部分 -->
					<s:HGroup height="31"
							  paddingBottom="10"
							  horizontalAlign="right"
							  gap="5"
							  width="100%">
						<mx:LinkButton id="btPrint"
									   label=" 打 印"
									   fontSize="12"
									   width="86"
									   height="26"
									   enabled="{isData}"
									   skin="mx.skins.halo.ButtonSkin"
									   click="btPreview_clickHandler('05','1')"
									   disabledIcon="@Embed(source='/assets/images/button/print20_disabled.png')"
									   icon="@Embed(source='/assets/images/button/print20.png')"/>
						<mx:LinkButton id="btPreview"
									   label=" 预 览"
									   fontSize="12"
									   width="86"
									   height="26"
									   enabled="{isData}"
									   skin="mx.skins.halo.ButtonSkin"
									   disabledIcon="@Embed(source='/assets/images/button/query20_disabled.png')"
									   icon="@Embed(source='/assets/images/button/query20.png')"
									   click="btPreview_clickHandler('05','2')"/>
						<mx:LinkButton id="btExport"
									   label=" 输 出"
									   fontSize="12"
									   width="86"
									   height="26"
									   enabled="{isData}"
									   skin="mx.skins.halo.ButtonSkin"
									   click="btExport_clickHandler('08','0')"
									   disabledIcon="@Embed(source='/assets/images/button/exp20_disabled.png')"
									   icon="@Embed(source='/assets/images/button/exp20.png')"/>
						<mx:LinkButton id="btReturn"
									   label=" 返 回"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/return20.png')"
									   click="btReturn_clickHandler(event)"/>
						<mx:Spacer width="5"/>
					</s:HGroup>
				</s:VGroup>
				
			</s:BorderContainer>
			
		</s:VGroup>
	</s:Scroller>
	<!--</s:BorderContainer>-->
	
</mx:Module>
