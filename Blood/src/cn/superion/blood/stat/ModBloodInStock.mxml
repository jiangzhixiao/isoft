<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   layout="vertical"
		   width="100%"
		   height="100%"
		   paddingBottom="5"
		   paddingLeft="5"
		   paddingRight="5"
		   paddingTop="5"
		   horizontalGap="0"
		   verticalGap="0"
		   xmlns:controls="cn.superion.base.components.controls.*"
		   creationComplete="inita()">
	
	<fx:Script>
		<![CDATA[
			import cn.superion.base.AppInfo;
			import cn.superion.base.config.BaseDict;
			import cn.superion.base.config.ParameterObject;
			import cn.superion.base.util.DateUtil;
			import cn.superion.base.util.FormUtils;
			import cn.superion.base.util.PurviewUtil;
			import cn.superion.base.RemoteUtil;
			import cn.superion.main.treeMenu.MainFrameUtil;
			import cn.superion.report2.ReportPrinter;
			import cn.superion.report2.ReportViewer;
			import cn.superion.vo.blood.BloodRdsDetail;
			import cn.superion.vo.blood.BloodRdsMaster;
			
			import com.adobe.utils.DateUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.utils.StringUtil;

			private const MENU_NO:String="0101";
			private const PARA_CODE:String='0102'
			private var para:ParameterObject=new ParameterObject();
			[Bindable]
			public var bloodRdsMaster:BloodRdsMaster;
			[Bindable]
			public var destination:String="currentStockImpl";


			private function inita():void
			{
				bloodCode.selectedIndex=0;
				typeCode.selectedIndex=0;
				para=new ParameterObject();
				para.conditions={"bloodCode": bloodCode.selectedItem.bloodCode, "typeCode": typeCode.selectedItem.typeCode};
				gridBorrowCenterList.config(para, destination, "findDetailListByCondition1", queryFunction);
				//新建数据，蓝色字体
				gridBorrowCenterList.grid.colorWhereField="currentStatus";
				gridBorrowCenterList.grid.colorWhereValue='0';
				gridBorrowCenterList.grid.colorWhereColor=0x0000FF;
				gridBorrowCenterList.grid.sortableColumns=true;
			}

			//定义的回调函数
			private function queryFunction(rev:Object):void
			{
				if (rev.data.length == 0)
					return;
				var lst:ArrayCollection=rev.data as ArrayCollection;
				gridBorrowCenterList.grid.dataProvider=lst;
			}


			//返回主页面
			protected function btReturn_clickHandler(event:MouseEvent):void
			{
				MainFrameUtil.closeTab(this);
			}

			//查询
			public function btQuery_clickHandler():void
			{ 
				if(isBillDate.selected==true)
				{
					billDate.selectedDate=billDate.selectedDate
				}else
				{
					billDate.selectedDate=null;
				}
				para.conditions={"billDate": billDate.selectedDate,"bloodBagCode": bloodBagCode.text,
					"bloodCode": bloodCode.selectedItem.blood, "typeCode": typeCode.selectedItem.bloodType};
				gridBorrowCenterList.reQuery(para);
			}

			protected function btPrint_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, lstrPurview))
				{
					Alert.show("您无此按钮操作权限！", "提示");
					return;
				}
				var laryWillPrintItems:ArrayCollection=null;
				laryWillPrintItems=gridBorrowCenterList.grid.dataProvider as ArrayCollection;

				for each (var it:Object in laryWillPrintItems)
				{
					var newIt:Object=new Object();
					newIt=it;
					it.rhSign=it.rhSign == "1" ? "阴性" : "阳性";
				}
				var dict:Dictionary=new Dictionary();
				dict["单位名称"]=AppInfo.sysUser.unitsName
				dict["主标题"]="在库血液列表";
				dict["制表人"]=AppInfo.sysUser.userName;
				var strXml:String = "report/blood/receive/gridBorrowCenterList.xml";
				loadReportXml(strXml,laryWillPrintItems,dict,isPrintSign);
//				ReportViewer.Instance.Show("report/blood/receive/gridBorrowCenterList.xml", laryWillPrintItems, dict);
//					ReportPrinter.LoadAndPrint("report/blood/receive/gridBorrowCenterList.xml", laryWillPrintItems, dict);
			}
			private function loadReportXml(reportUrl:String,faryDetails:ArrayCollection, fdict:Dictionary,fprintSign:String):void{
				var loader:URLStream=new URLStream();
				loader.addEventListener(Event.COMPLETE, function(event:Event):void{
					var stream:URLStream = event.currentTarget as URLStream;
					var xml:XML=XML(stream.readMultiByte(stream.bytesAvailable,"utf-8"));
					if (fprintSign == "1")
					{
						ReportPrinter.Print(xml, faryDetails, fdict);
					}
					else
					{
						ReportViewer.Instance.Show(xml, faryDetails, fdict);
					}
				});
				var url:URLRequest = new URLRequest(reportUrl);
				loader.load(url);
			}
			//修改事件
			protected function btChange_clickHandler(event:Event):void
			{
				if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, "02"))
				{
					Alert.show("您无此按钮操作权限！", "提示");
					return;
				}
				if (!gridBorrowCenterList.grid.selectedItem)
				{
					Alert.show('请先选择一条记录', '提示');
					return
				}
//				var topApp:DisplayObject=DisplayObject(FlexGlobals.topLevelApplication);
//				var win:BloodInStockDetail=PopUpManager.createPopUp(this, BloodInStockDetail, true) as BloodInStockDetail;
//				win.data={masterItem: gridBorrowCenterList.grid.selectedItem, parentWin: this,btnModifyBeClicked:true};
//				win.title = '修改';
//				FormUtils.fullScreenWindow(win);
			}

			/**
			 * LabelFunction :根据成分编码显示成分名称
			 * */
			private function labFunTypeCode(item:Object, column:DataGridColumn):String
			{
				var ary:ArrayCollection=BaseDict.bloodTypeDict;
				if (ary.length == 0)
				{
					return " ";
				}
				var name:String="";
				for each (var obj:Object in ary)
				{
					if (obj.bloodType == item.typeCode)
					{
						name=obj.bloodTypeName;
						break;
					}
				}
				return name;
			}

			/**
			 * LabelFunction :根据血型编码显示血型名
			 * */
			private function labFunBloodCode(item:Object, column:DataGridColumn):String
			{
				var ary:ArrayCollection=BaseDict.bloodDict;
				if (ary.length == 0)
				{
					return " ";
				}
				var name:String="";
				for each (var obj:Object in ary)
				{
					if (obj.blood == item.bloodCode)
					{
						name=obj.bloodName;
					}
				}
				return name;
			}

			/**
			 * LabelFunction :根据Rh(D)阴性：0，1，分别显示阴性，阴性
			 * */
			private function labFunRhSign(item:Object, column:DataGridColumn):String
			{

				switch (item.rhSign)
				{
					case "0":
						return "阳性";
						break;
					case "1":
						return "阴性";
						break;
					default:
						return " ";
						break;
				}
			}

			/**
			 * 双击修改
			 * */
			protected function gridBorrowCenterList_doubleClickHandler(event:Event):void
			{
				btChange_clickHandler(event);
			}

			//审核
			protected function btCheck_clickHandler(event:MouseEvent):void
			{
				if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, "06"))
				{
					Alert.show("您无此按钮操作权限！", "提示");
					return;
				}
				if (!gridBorrowCenterList.grid.selectedItem)
				{
					Alert.show("请选择信息", "提示");
					return;
				}
//				var testWin:BloodInStockDetail=PopUpManager.createPopUp(this, BloodInStockDetail, true) as BloodInStockDetail;
//				testWin.title = "审核";
//				FormUtils.fullScreenWindow(testWin);				
//				testWin.data={masterItem: gridBorrowCenterList.grid.selectedItem,btnCheckBeClicked:true,parentWin: this};
			}

			/**
			 * 处理键的keyUp事件
			 * */
			protected function keyUpCtrl(event:KeyboardEvent, ctrl:Object):void
			{
				if (event.keyCode != 13)
				{
					return;
				}
				if (event.currentTarget.hasOwnProperty("className"))
				{
					if (event.currentTarget.className == "TextInput")
					{
						if (StringUtil.trim(event.currentTarget.text).length == 0)
						{
							return;
						}
					}
				}
				if (ctrl.className == "DropDownList")
				{
					ctrl.openDropDown();
				}
				if (ctrl.className == "DateField")
				{
					ctrl.open();
				}
				ctrl.setFocus();
			}

			private function btQuery_keyUpClickHandler(event:KeyboardEvent):void
			{
				if (event.keyCode != 13)
				{
					return;
				}
				btQuery_clickHandler();
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer width="100%"
					   height="100%"
					   backgroundColor="0xE2E8E8"
					   borderVisible="false">
		<s:VGroup x="0"
				  y="0"
				  width="100%"
				  height="100%">

			<!-- 查询条件区 -->
			<s:HGroup width="100%"
					  id="queryPanelBc"
					  paddingLeft="8"
					  paddingTop="5"
					  verticalAlign="middle">
				<s:CheckBox id="isBillDate"/>
				<s:Label text="入库日期"
						 fontSize="14"
						 color="#0000FF"/>
				<mx:DateField id="billDate" monthNames="['1','2','3','4','5','6','7','8','9','10','11','12']" dayNames="['日','一','二','三','四','五','六']"
							  width="140"
							  fontSize="14"
							  enabled="{isBillDate.selected==true}"
							  formatString="YYYY-MM-DD"
							  enterFrame="{billDate.selectedDate==null?billDate.selectedDate=new Date():billDate.selectedDate}"
							  selectableRange="{{rangeEnd:new Date()}}"
							  keyUp="keyUpCtrl(event,bloodBagCode)"/>
				<s:Label text="血袋编号"
						 fontSize="14"
						 color="#0000FF"/>
				<mx:TextInput id="bloodBagCode"
							  color="#000000"
							  fontSize="14"
							  keyUp="keyUpCtrl(event,bloodCode)"
							  maxChars="40"
							  width="160"
							  restrict="a-z A-z0-9\\-"/>
				<mx:FormItem label="血型"
							 fontSize="14"
							 color="#0000FF">
					<s:DropDownList id="bloodCode"
									fontSize="18"
									color="red"
									labelField="bloodName"
									keyUp="keyUpCtrl(event,typeCode)"
									creationComplete="{bloodCode.dataProvider=BaseDict.bloodDict}"
									width="100"/>
				</mx:FormItem>
				<mx:FormItem label="成分"
							 fontSize="14"
							 color="#0000FF">
					<s:DropDownList id="typeCode"
									color="#000000"
									requireSelection="true"
									labelField="bloodTypeName"
									keyUp="keyUpCtrl(event,btQuery)"
									creationComplete="{typeCode.dataProvider=BaseDict.bloodTypeDict;}"
									width="153"/>
				</mx:FormItem>

				<mx:LinkButton id="btQuery"
							   height="24"
							   label=" 查 找"
							   skin="mx.skins.halo.ButtonSkin"
							   icon="@Embed(source='/assets/images/button/query20.png')"
							   click="btQuery_clickHandler()"
							   keyUp="btQuery_keyUpClickHandler(event)"/>
			</s:HGroup>
			<!-- 表体部分 -->
			<s:BorderContainer width="100%"
							   height="100%"
							   backgroundColor="0xE2E8E8"
							   borderStyle="solid"
							   borderColor="#9ABBE6">
				<s:VGroup width="100%"
						  height="100%">
					<controls:PageGrid id="gridBorrowCenterList"
									   styleName="dataGrid"
									   hasRowNo="false">
						<controls:columns>
							<mx:DataGridColumn headerText="入库日期"
											   dataField="billDate"
											   visible="false"
											   width="0"/>
							<mx:DataGridColumn headerText="产品码"
											   dataField="productCode"
											   textAlign="left"
											   visible="false"/>
							<mx:DataGridColumn headerText="血袋编号"
											   dataField="productCode"
											   textAlign="left"
											   width="120"/>
							<mx:DataGridColumn headerText="血型"
											   dataField="bloodCode"
											   textAlign="left"
											   labelFunction="labFunBloodCode"
											   width="60"/>
							<mx:DataGridColumn headerText="血液成份"
											   dataField="typeCode"
											   textAlign="left"
											   labelFunction="labFunTypeCode"
											   width="120"/>
							<mx:DataGridColumn headerText="Rh(D)"
											   dataField="rhSign"
											   textAlign="left"
											   itemRenderer="cn.superion.blood.util.renderer.ColumnItemRendererRhSign"
											   labelFunction="labFunRhSign"
											   width="50"/>
							<!--这里的规格对应:主计量数量AMOUNT-->
							<mx:DataGridColumn headerText="规格"
											   dataField="spec"
											   textAlign="left"
											   width="80"/>
							<!--	<mx:DataGridColumn headerText="献血者编号"
								 dataField="bloodDonorCode"
								 textAlign="left"
								 width="140"/>-->
							<mx:DataGridColumn headerText="采血日期"
											   dataField="collectDate"
											   textAlign="left"
											   width="90"/>
							<mx:DataGridColumn headerText="失效日期"
											   dataField="availDate"
											   textAlign="left"
											   width="90"/>
						</controls:columns>
					</controls:PageGrid>
					<!-- 操作按钮部分 -->
					<s:HGroup height="31"
							  paddingBottom="10"
							  horizontalAlign="right"
							  gap="5"
							  width="100%">
						<mx:LinkButton id="btPrint"
									   label=" 打 印"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/print20.png')"
									   click="btPrint_clickHandler('05','1')"/>
						<mx:LinkButton id="btReturn"
									   label=" 返 回"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/return20.png')"
									   click="btReturn_clickHandler(event)"/>
						<mx:Spacer width="5"/>
					</s:HGroup>
				</s:VGroup>

			</s:BorderContainer>

		</s:VGroup>

	</s:BorderContainer>

</mx:Module>
