<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   layout="vertical"
		   width="100%"
		   height="100%"
		   paddingBottom="5"
		   paddingLeft="5"
		   paddingRight="5"
		   paddingTop="5"
		   horizontalGap="0"
		   verticalGap="0"
		   xmlns:controls="cn.superion.base.components.controls.*">
	
	<fx:Script>
		<![CDATA[
			import cn.superion.base.AppInfo;
			import cn.superion.base.config.BaseDict;
			import cn.superion.base.config.ParameterObject;
			import cn.superion.base.util.ArrayCollUtils;
			import cn.superion.base.util.DateUtil;
			import cn.superion.base.util.FormUtils;
			import cn.superion.base.util.PurviewUtil;
			import cn.superion.base.RemoteUtil;
			import cn.superion.main.treeMenu.MainFrameUtil;
			import cn.superion.blood.util.renderer.ColumnItemRendererRhSign;
			import cn.superion.dataDict.DictWinShower;
			import cn.superion.report2.ReportPrinter;
			import cn.superion.report2.ReportViewer;
			
			import com.adobe.utils.StringUtil;
			
			import flexlib.scheduling.util.DateUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			[Bindable]
			private var _dataProviderGrid:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var _dataProviderPersons:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var _dataProviderChart:ArrayCollection = new ArrayCollection();
			
			private var destination:String='patientUseBloodImpl';
			private const MENU_NO:String="0501";
			//条件对象
			private static var _condition:Object={};
			[Bindable]
			private var _count:String = ""
//			private var _wardCode:String="";

			/**
			 * 病人用血统计
			 *
			 * @author 吴小娟
			 *
			 */
			//回车获取焦点
			protected function keyUpCtrl(event:KeyboardEvent, ctrl:Object):void
			{
				if (event.keyCode == 13)
				{
					if (ctrl.className == "DateField")
					{
						ctrl.open();
					}
					if (event.currentTarget.className == "TextInput")
					{
						if (StringUtil.trim(event.currentTarget.text).length == 0)
						{
							return;
						}
					}
					ctrl.setFocus();
				}
			}
			[Bindable]
			private var medalsAC:ArrayCollection = new ArrayCollection( [
				{ Country: "一病区", A: 35, B:39, O: 29,AB:20 },
				{ Country: "二病区", A: 32, B:17, O: 14,AB:20 },
				{ Country: "三病区", A: 27, B:27, O: 38,AB:20 } ]);
			/**
			 * 病区字典：点击
			 * */
			protected function wardCode_queryIconClickHandler():void
			{
				var x:int=0;
				var y:int=this.parentApplication.screen.height - 345;
				DictWinShower.showDeptWardDict((function(item:Object):void
					{
//						wardCode.txtContent.text=item.deptName;
						_condition.wardCode=item.deptCode;
//						_wardCode=item.deptCode;
					}));
			}

			/**
			 * 科室字典：点击
			 * */
			protected function deptCode_queryIconClickHandler():void
			{
				var x:int=0;
				var y:int=this.parentApplication.screen.height - 345;
				DictWinShower.showDeptWardDict((function(item:Object):void
					{
//						deptCode.txtContent.text=item.deptName;
						_condition.deptCode=item.deptCode;
					}));
			}

			/**
			 * 放大镜输入框键盘处理方法
			 * */
			protected function textInputIcon_keyUpHandler(event:KeyboardEvent, fctrNext:Object):void
			{
				FormUtils.textInputIconKeyUpHandler(event, _condition, fctrNext);
			}

			private function findPatCount():void{
				
				var paramQuery:ParameterObject=new ParameterObject();
				//开始日期
				_condition['beginUseDate']=dfStartDate.text;
				//结束日期
//				var endCallbackDate:Date=new Date();
//				endCallbackDate.setTime(dfEndDate.selectedDate.getTime() + 24 * 60 * 60 * 1000);
				_condition['endUseDate']=dfEndDate.text;
				// 住院号
				_condition["inpNo"]=cboxInpNO.text;
				//姓名
//				_condition["personName"]=cboxPersonName.text;
				//				_condition["wardCode"]=_wardCode;
				paramQuery.conditions=_condition;
				var ro:RemoteObject=RemoteUtil.getRemoteObject(destination, function(rev:Object):void
				{
					
					if (rev.data && rev.data.length > 0)
					{
						var arry:ArrayCollection=new ArrayCollection;
						for each (var obj:Array in rev.data)
						{
							var o:Object=new Object();
							o.patientId=obj[0];
							o.personName=obj[1];
							arry.addItem(o);
						}
						gridTotal.dataProvider=arry;
						_count = arry.length.toString();
						return;
					}
					gridTotal.dataProvider=[];
				});
				ro.findPatCount(paramQuery);
			}
			//查找功能
			protected function btQuery_clickHandler(event:Event):void
			{
//				if(nav.selectedIndex == 1){
//					findPatCount()
//					return;
//				}
				var paramQuery:ParameterObject=new ParameterObject();
				//开始日期
				_condition['beginUseDate']=cbx.selected?dfStartDate.text:null;
				//结束日期
				var endCallbackDate:Date=new Date();
				endCallbackDate.setTime(dfEndDate.selectedDate.getTime() + 24 * 60 * 60 * 1000);
				_condition['endUseDate']=cbx.selected?dfEndDate.text:null;
				// 住院号
				_condition["inpNo"]=cboxInpNO.text;
				//姓名
//				_condition["personName"]=cboxPersonName.text;
//				_condition["wardCode"]=_wardCode;
				paramQuery.conditions=_condition;
				var ro:RemoteObject=RemoteUtil.getRemoteObject(destination, function(rev:Object):void
					{

						if (rev.data && rev.data.length > 0)
						{
							if(nav.selectedIndex ==2){
								var arry3:ArrayCollection=new ArrayCollection;
//								for each (var obj:Array in rev.data)
//								{
									var o:Object=new Object();
//									o.wardName=obj[0];
									o.personTimes=Number(rev.data[0]);
									arry3.addItem(o);
//								}
								_dataProviderPersons=arry3;
								return;
							}
							if(rev.data[0].length >0 ){
								var arry2:ArrayCollection=new ArrayCollection;
								for each (var obj:Array in rev.data[0])
								{
									var o:Object=new Object();
//									o.deptName=obj[0];
									o.bloodCode=obj[0];
									o.personTimes=obj[1];
									arry2.addItem(o);
								}
								_dataProviderGrid=arry2;
							}else{
								_dataProviderGrid.removeAll();
							}
							if(rev.data[1].length >0){
								var arry:ArrayCollection=new ArrayCollection;
								for each (var obj:Array in rev.data[1])
								{
									var o:Object=new Object();
//									o.deptName=obj[0];
									o.bloodType="A"
									o.nums = obj[0];
									arry.addItem(o);
									var o:Object=new Object();
									o.bloodType="B"
									o.nums = obj[1];
									arry.addItem(o);
									var o:Object=new Object();
									o.bloodType="AB"
									o.nums = obj[2];
									arry.addItem(o);
									var o:Object=new Object();
									o.bloodType="O"
									o.nums = obj[3];
									arry.addItem(o);
									
								}
								_dataProviderChart=arry;
							}else{
								_dataProviderChart.removeAll();
							}
						}
						
					});
				if(nav.selectedIndex ==2){
					ro.findUseBloodNumbersHos(paramQuery);
				}else{
					ro.findBloodTypeDistributionHos(paramQuery);
					
				}
			}

			//回车实现查找功能
			protected function btQuery_keyUpHandler(event:KeyboardEvent):void
			{
				// TODO Auto-generated method stub
				if (event.keyCode == Keyboard.ENTER)
				{
					btQuery_clickHandler(event);
				}
			}

			//病区、RH阴的Label显示方式
			private function labelFun(item:Object, column:DataGridColumn):*
			{
				if (column.headerText == '病区')
				{
					var wardCodeItem:Object=ArrayCollUtils.findItemInArrayByValue(BaseDict.deptDict, 'dept', item.wardCode);
					if (!wardCodeItem)
					{
						return '';
					}
					else
					{
						item.wardName=wardCodeItem.deptName;
						return wardCodeItem.deptName;
					}
				}

				if (column.headerText == 'Rh(D)')
				{
					if (item.notData)
					{
						return '';
					}
					if (item.rhSign == '' || item.rhSign == '0' || item.rhSign == null)
					{
						item.rhSignName='阳性';
						return '阳性';
					}
					else
					{
						item.rhSignName='阴性';
						return '阴性';
					}
				}
			}

			/**
			 * 打印、预览处理事件
			 * @param 参数说明
			 * 		  lstrPurview 权限编号;
			 * 		  isPrintSign 打印预览输出标示,预览：2，直接打印：1，输出：0
			 */
			protected function btPreview_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				// TODO Auto-generated method stub
				//判断具有操作权限  -- 应用程序编号，菜单编号，权限编号
				// 01：增加                02：修改            03：删除
				// 04：保存                05：打印            06：审核
				// 07：弃审                08：输出            09：输入
				if (!PurviewUtil.getPurview(AppInfo.APP_CODE, MENU_NO, lstrPurview))
				{
					Alert.show("您无此按钮操作权限！", "提示");
					return;
				}
				var patientUseBloodPrintItems:ArrayCollection=gridTotal.dataProvider as ArrayCollection;
				var dict:Dictionary=new Dictionary();
				dict["单位名称"]=AppInfo.sysUser.unitsName;
				dict["日期"]=DateField.dateToString(new Date(), 'YYYY-MM-DD');
				dict["dfStartDate"]=DateField.dateToString(dfStartDate.selectedDate, 'YYYY-MM-DD');
				dict["dfEndDate"]=DateField.dateToString(dfEndDate.selectedDate, 'YYYY-MM-DD');
				dict["住院号"]=cboxInpNO.text;
				if(cboxInpNO.text != ""){
					for each(var item:Object in patientUseBloodPrintItems){
						dict["姓名"]=item.personName;
						break;
					}
				}
				else{
//					dict["姓名"]=cboxPersonName.text;
				}
				dict["主标题"]="病人用血统计";
				dict["制表人"]=AppInfo.sysUser.userName;
				var strXml:String = "report/blood/stat/patientUseBlood.xml";
				loadReportXml(strXml,patientUseBloodPrintItems,dict,isPrintSign);
				
//				if (isPrintSign == '1')
//				{
//					ReportPrinter.LoadAndPrint("report/blood/stat/patientUseBlood.xml", patientUseBloodPrintItems, dict);
//				}
//				else
//				{
//					ReportViewer.Instance.Show("report/blood/stat/patientUseBlood.xml", patientUseBloodPrintItems, dict);
//				}
			}
			private function loadReportXml(reportUrl:String,faryDetails:ArrayCollection, fdict:Dictionary,fprintSign:String):void{
				var loader:URLStream=new URLStream();
				loader.addEventListener(Event.COMPLETE, function(event:Event):void{
					var stream:URLStream = event.currentTarget as URLStream;
					var xml:XML=XML(stream.readMultiByte(stream.bytesAvailable,"utf-8"));
					if (fprintSign == "1")
					{
						ReportPrinter.Print(xml, faryDetails, fdict);
					}
					else
					{
						ReportViewer.Instance.Show(xml, faryDetails, fdict);
					}
				});
				var url:URLRequest = new URLRequest(reportUrl);
				loader.load(url);
			}
			//输出
			protected function btExport_clickHandler(lstrPurview:String, isPrintSign:String):void
			{
				// TODO Auto-generated method stub
			}

			//返回主页面
			protected function btReturn_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				MainFrameUtil.closeTab(this);
			}

			
			private function displayGold(data:Object, field:String, index:Number, percentValue:Number):String {
				var temp:String= (" " + percentValue).substr(0,6);
				return data.bloodType + "型: " + '\n' + "人次: " + data.nums + '\n' + temp + "%";
			}
			
			/**
			 * LabelFunction :根据成分编码显示成分名称
			 * */
			private function labFunTypeCode(item:Object, column:DataGridColumn):String
			{
				var ary:ArrayCollection=BaseDict.bloodTypeDict;
				if (ary.length == 0)
				{
					return " ";
				}
				var name:String="";
				for each (var obj:Object in ary)
				{
					if (item.typeCode == "")
					{
						name="";
					}
					else
					{
						if (obj.bloodType == item.typeCode)
						{
							name=obj.bloodTypeName;
						}
					}
				}
				item.typeName=name;
				return item.typeName;
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:BorderContainer width="100%"
					   height="100%"
					   backgroundColor="0xE2E8E8"
					   borderVisible="false">
		<s:VGroup width="100%"
				  height="100%"
				  gap="0">

			<!-- 表体部分 -->
			<s:BorderContainer width="100%"
							   height="100%"
							   backgroundColor="0xE2E8E8"
							   borderStyle="solid"
							   borderColor="#9ABBE6">
				<s:VGroup width="100%"
						  height="100%"
						  paddingLeft="5"
						  paddingRight="5">
					<!-- 查询条件区 -->
					<s:HGroup width="100%"
							  paddingLeft="5"
							  paddingTop="5">

						<mx:CheckBox id="cbx" selected="false"/>
						<mx:FormItem label="入院日期"
									 fontSize="14"
									 color="#0000FF"
									 direction="horizontal"
									 width="320">
							<mx:DateField id="dfStartDate"
										  keyUp="keyUpCtrl(event,dfEndDate)"
										  width="50%"
										  enabled="{cbx.selected}"
										  formatString="YYYY-MM-DD"
										  enterFrame="{dfStartDate.selectedDate==null?dfStartDate.selectedDate=new Date():dfStartDate.selectedDate}"
										  disabledRanges="{[{rangeStart:dfEndDate.selectedDate}]}"/>
							<mx:FormItem label="-"
										 fontSize="14"
										 color="#0000FF"
										 labelWidth="10"
										 width="50%"
										 horizontalGap="0">
								<mx:DateField id="dfEndDate"
											  enabled="{cbx.selected}"
											  keyUp="keyUpCtrl(event,cboxInpNO)"
											  width="100%"
											  formatString="YYYY-MM-DD"
											  enterFrame="{dfEndDate.selectedDate==null?dfEndDate.selectedDate=new Date():dfEndDate.selectedDate}"
											  selectableRange="{{rangeStart:dfStartDate.selectedDate, rangeEnd:new Date()}}"/>
							</mx:FormItem>
						</mx:FormItem>

						<mx:FormItem label="住院号" includeInLayout="false" visible="false"
									 fontSize="14"
									 color="#0000FF"
									 width="180">
							<s:TextInput id="cboxInpNO" includeInLayout="false" visible="false"
										 width="100%"/>
						</mx:FormItem>
						<mx:LinkButton id="btQuery"
									   height="24"
									   label=" 查 找"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/query20.png')"
									   click="btQuery_clickHandler(event)"
									   keyUp="btQuery_keyUpHandler(event)"/>
					</s:HGroup>
					<s:HGroup width="100%"
							  paddingLeft="5"
							  paddingTop="5"
							  verticalAlign="middle">
					</s:HGroup>
					<mx:TabNavigator id="nav" width="100%" height="100%">
						<s:NavigatorContent label="全院汇总">
						
							<controls:SuperDataGrid id="gridTotal" width="100%" hasRowNo="true"
													dataProvider="{_dataProviderGrid}"
													height="100%" horizontalScrollPolicy="on">
								<controls:columns>
									<mx:DataGridColumn headerText="序号"/>
									<mx:DataGridColumn dataField="bloodCode" headerText="血型" width="150"/>
									<mx:DataGridColumn dataField="personTimes" headerText="人次" width="150"/>
								</controls:columns>
							</controls:SuperDataGrid>
						</s:NavigatorContent>
						<s:NavigatorContent label="图形">
							
							<mx:Panel title="全院血型分布" layout="horizontal" color="0xffffff" borderAlpha="0.15" width="100%" height="100%"
									  paddingTop="10" paddingRight="5" paddingBottom="10" paddingLeft="5" horizontalAlign="center">
								
								<mx:PieChart id="chart" height="100%" width="100%" paddingRight="5" paddingLeft="5" color="0x323232"
											 showDataTips="true" dataProvider="{_dataProviderChart}" >
									
									<mx:series>
										<mx:PieSeries labelPosition="callout" field="nums" labelFunction="displayGold">
											<mx:calloutStroke>
												<s:SolidColorStroke weight="0" color="0x888888" alpha="1.0"/>
											</mx:calloutStroke>
											<mx:radialStroke>
												<s:SolidColorStroke weight="0" color="#FFFFFF" alpha="0.20"/>
											</mx:radialStroke>
											<mx:stroke>
												<s:SolidColorStroke color="0" alpha="0.20" weight="2"/>
											</mx:stroke>
										</mx:PieSeries>
									</mx:series>
								</mx:PieChart>
								
							</mx:Panel>
						</s:NavigatorContent>
						
						<s:NavigatorContent label="用血总人次（抗体筛查人次）">
							
							<controls:SuperDataGrid id="gridTestPersons" width="100%" hasRowNo="true"
													dataProvider="{_dataProviderPersons}"
													sumField="['personTimes']"
													height="100%" horizontalScrollPolicy="on">
								<controls:columns>
									<mx:DataGridColumn headerText="序号"/>
									<mx:DataGridColumn dataField="personTimes" headerText="人次" width="150"/>
								</controls:columns>
							</controls:SuperDataGrid>
						</s:NavigatorContent>
						
						</mx:TabNavigator>
					

					<!-- 操作按钮部分 -->
					<s:HGroup height="31"
							  paddingBottom="10"
							  horizontalAlign="right"
							  gap="5"
							  width="100%">
						<s:Label text="共" fontSize="16" color="red"/>
						<s:Label text="{_count}" fontSize="16" color="red"/>
						<s:Label text="人" fontSize="16" color="red"/>
						<s:Spacer width="100%"/>
						<mx:LinkButton id="btPrint"
									   label=" 打 印"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   click="btPreview_clickHandler('05','1')"
									   icon="@Embed(source='/assets/images/button/print20.png')"/>
						<mx:LinkButton id="btPreview"
									   label=" 预 览"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/query20.png')"
									   click="btPreview_clickHandler('05','2')"/>
						<mx:LinkButton id="btExport"
									   label=" 输 出"
									   fontSize="12"
									   width="86"
									   height="26"
									   enabled="false"
									   skin="mx.skins.halo.ButtonSkin"
									   click="btExport_clickHandler('08','0')"
									   icon="@Embed(source='/assets/images/button/exp20.png')"/>
						<mx:LinkButton id="btReturn"
									   label=" 返 回"
									   fontSize="12"
									   width="86"
									   height="26"
									   skin="mx.skins.halo.ButtonSkin"
									   icon="@Embed(source='/assets/images/button/return20.png')"
									   click="btReturn_clickHandler(event)"/>
						<mx:Spacer width="5"/>
					</s:HGroup>
				</s:VGroup>

			</s:BorderContainer>

		</s:VGroup>

	</s:BorderContainer>

</mx:Module>
